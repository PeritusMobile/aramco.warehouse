<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Resco.AdvancedComboBox.CF2</name>
    </assembly>
    <members>
        <member name="T:Resco.Controls.AdvancedComboBox.Links">
            <summary>
            Summary description for Links.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ImageCache">
            <summary>
            Summary description for ImageCache.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.GradientColor">
            <summary>
            Represents a gradient color.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.#ctor">
            <summary>
            Initializes a new instance of the GradientColor class. 
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.#ctor(Resco.Controls.AdvancedComboBox.FillDirection)">
            <summary>
            Initializes a new instance of the GradientColor class.
            </summary>
            <param name="fillDirection">Fill direction.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the GradientColor class.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="endColor">End color.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.#ctor(System.Drawing.Color,System.Drawing.Color,Resco.Controls.AdvancedComboBox.FillDirection)">
            <summary>
            Initializes a new instance of the GradientColor class.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="endColor">End color.</param>
            <param name="fillDirection">Fill direction.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Resco.Controls.AdvancedComboBox.FillDirection)">
            <summary>
            Initializes a new instance of the GradientColor class.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="middleColor1">Middle color.</param>
            <param name="middleColor2">Middle color.</param>
            <param name="endColor">End color.</param>
            <param name="fillDirection">Fill direction.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.DrawGradient(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the gradient at the specified rectangle to the specified graphics. 
            </summary>
            <param name="gr">Graphics to be gradient drawn.</param>
            <param name="rc">Rectangle to be gradient drawn.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.DrawVistaGradient(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the vista gradient at the specified rectangle to the specified graphics.
            </summary>
            <param name="gr">Graphics to be gradient drawn.</param>
            <param name="rc">Rectangle to be gradient drawn.</param>
            <remarks><b>DrawVistaGradient</b> will use StartColor only to draw gradient.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.ShouldSerializeStartColor">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.GradientColor.StartColor"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>	
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.ShouldSerializeMiddleColor1">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.GradientColor.StartColor"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>	
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.ShouldSerializeMiddleColor2">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.GradientColor.StartColor"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>	
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.ShouldSerializeEndColor">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.GradientColor.EndColor"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>	
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.ShouldSerializeFillDirection">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.GradientColor.FillDirection"/> property should be persisted. 
            </summary>
            <returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.</returns>	
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientColor.OnPropertyChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Resco.Controls.AdvancedComboBox.GradientColor.PropertyChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.GradientColor.PropertyChanged">
            <summary>
            Notify the parent control when some property was changed.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.GradientColor.StartColor">
            <summary>
            Gets or sets the starting color of the gradient. 
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.GradientColor.MiddleColor1">
            <summary>
            Gets or sets the middle color of the gradient. 
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.GradientColor.MiddleColor2">
            <summary>
            Gets or sets the middle color of the gradient. 
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.GradientColor.EndColor">
            <summary>
            Gets or sets the ending color of the gradient. 
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.GradientColor.FillDirection">
            <summary>
            Gets or sets the direction of the gradient.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.FillDirection">
            <summary>
            The direction of the gradient will fill.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.FillDirection.Horizontal">
            <summary>
            The fill goes horizontally.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.FillDirection.Vertical">
            <summary>
            The fill goes vertically. 
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.GradientFill.GetAssemblyVersion">
            <summary>
            Gets the current application's or DLL's assembly version.
            </summary>
            <returns>Assembly version.</returns>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.IDataConnector">
            <summary>
            Represents a connection to an enumerable data source.
            </summary>
            <remarks>IDataConnector is used to represent forward only readable source of data,
            e.g. taken from IDataReader, XMLReader or FileStream.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.IDataConnector.Open">
            <summary>
            Opens the connection to datasource.
            </summary>
            <remarks>
            When the connection is open, position should be set before the first possible row of data.
            </remarks>
            <returns><c>true</c> when connection is open, otherwise <c>false</c></returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.IDataConnector.Close">
            <summary>
            Close the connection to datasource.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.IDataConnector.MoveNext">
            <summary>
            Advances the position to the next row of data.
            </summary>
            <remarks>MoveNext should be called after <see cref="M:Resco.Controls.AdvancedComboBox.IDataConnector.Open"/> prior to accessing the <see cref="P:Resco.Controls.AdvancedComboBox.IDataConnector.Current"/> data.</remarks>
            <returns><c>true</c> if the next row was loaded, otherwise <c>false</c></returns>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.IDataConnector.IsOpen">
            <summary>
            Gets the value indicating whether the connection is open.
            </summary>
            <value><c>true</c> when connection is open, otherwise <c>false</c></value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.IDataConnector.Current">
            <summary>
            Gets the current row of data.
            </summary>
            <remarks>
            Current data could be accessed multiple times until the call to a <see cref="M:Resco.Controls.AdvancedComboBox.IDataConnector.MoveNext"/>
            </remarks>
            <value><see cref="T:System.Collections.IList"/> containing the data from the source.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.IDataConnector.Mapping">
            <summary>
            Gets the field mapping of the data.
            </summary>
            <value>The <see cref="P:Resco.Controls.AdvancedComboBox.IDataConnector.Mapping"/> of the data.</value>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.DataConnector">
            <summary>
            Basic implementation of IDataConnector which connects to arbitrary database.
            </summary>
            <remarks>
            <p>The <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Command"/> property must be set prior to using the 
            <see cref="T:Resco.Controls.AdvancedComboBox.DataConnector"/>.</p>
            <p>DataConnector loads the data from the database using given <see cref="T:System.Data.IDbCommand"/> to get
            <see cref="T:System.Data.IDataReader"/>. If no command is supplied (or created), the <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Open"/> method
            will return <c>false</c>.</p>
            <note type="Compact Framework">Current implementation of the DataConnector for 
            the Compact Framework supports CommandText and ConnectionString properties, which can be 
            set in the design time. When the <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Command"/> property is not set before setting 
            the CommandText and/or the ConnectionString or before accessing the <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Command"/> property,
             DataConnector will attempt to create new instance 
            of the <see cref="!:System.Data.SqlServerCe.SqlCeCommand"/> and 
            the <see cref="!:System.Data.SqlServerCe.SqlCeConnection"/>  from the assembly
            "System.Data.SqlServerCe, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=969db8053d3322ac".
            </note>
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.DataConnector.#ctor">
            <summary>
            Creates DataConnector.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.DataConnector.#ctor(System.Data.IDbCommand)">
            <summary>
            Creates DataConnector with the selected command.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.DataConnector.ToString">
            <summary>
            Returns a String that represents the current DataConnector.
            </summary>
            <returns>A String that represents the current DataConnector.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.DataConnector.Open">
            <summary>
            Opens the connection to datasource.
            </summary>
            <remarks>
            <p>When the connection is open, position is set before the first possible row of data.</p>
            <p>When <c>IDbConnector.Command.Connection.State</c> is <c>ConnectionState.Open</c>, the current
            open connection is reused. It will stay open after calling the <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Close"/> method.
            Otherwise new connection to database is made, which is then closed by 
            the <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Close"/> method.</p>
            <p>State of DataConnector is not the same as the state of the <c>Command.Connection</c>.
            When <c>Command.Connection</c> was open when calling <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Open"/> method, it will 
            stay open after calling the <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Close"/> method. Otherwise the 
            <c>Command.Connection</c> will be open/closed with the connector.</p>
            <note>It is required to call the <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Close"/> method 
            on the successfully opened connection.</note>
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when IsOpen is <c>true</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when no command is set, or no connection for the command.</exception>
            <returns><c>true</c> when connection is open, otherwise <c>false</c></returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.DataConnector.Close">
            <summary>
            Close the connection to datasource.
            </summary>
            <remarks>
            <p>State of DataConnector is not the same as the state of the <c>Command.Connection</c>.
            When <c>Connector.Connection</c> was open when calling <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Open"/> method, it will 
            stay open after calling the <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Close"/> method. Otherwise the 
            <c>Command.Connection</c> will be open/closed with the connector.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.DataConnector.MoveNext">
            <summary>
            Advances the position to the next row of data.
            </summary>
            <remarks>MoveNext should be called after <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Open"/> prior to accessing the <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Current"/> data.</remarks>
            <returns><c>true</c> if the next row was loaded, otherwise <c>false</c></returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.DataConnector.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the DataConnector and optionally releases the managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.DataConnector.Dispose">
            <summary>
            Releases all resources used by the DataConnector.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.DataConnector.Command">
            <summary>
            Gets or sets the <see cref="T:System.Data.IDbCommand"/> used to retrieve data. 
            </summary>
            <remarks>
            <p>The <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Command"/> property must be set prior to using the 
            <see cref="T:Resco.Controls.AdvancedComboBox.DataConnector"/>.</p>
            <note type="Compact Framework">In Compact Framework if the <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.CommandText"/> or 
            the <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.ConnectionString"/>  is set in designtime or <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Command"/> is 
            accessed in runtime and no command is supplied before, the new instance of the 
            <see cref="!:System.Data.SqlServerCe.SqlCeCommand"/> and the 
            <see cref="!:System.Data.SqlServerCe.SqlCeConnection"/> will be created.</note>
            </remarks>
            <value><see cref="T:System.Data.IDbCommand"/> used to retrieve data. Default value is <see langword="null"/></value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.DataConnector.CommandText">
            <summary>
            Gets or sets the command text.
            </summary>
            <remarks>
            <p>When no command is defined, this property has no effect, otherwise it is a shortcut property
            for access to the <see cref="P:System.Data.IDbCommand.CommandText"/> property of the <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Command"/>.</p>
            <note type="Compact Framework">This property is used in the design time for 
            the Compact Framework to set up the command text. If it is set in the runtime,
            and no command was supplied, then new instance of the 
            <see cref="!:System.Data.SqlServerCe.SqlCeCommand"/> and the 
            <see cref="!:System.Data.SqlServerCe.SqlCeConnection"/> is created.
            </note></remarks>
            <value>The command text for the <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Command"/>, 
            default value is <see cref="F:System.String.Empty"/></value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.DataConnector.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <remarks>
            <p>When no command is defined, this property has no effect, otherwise it is a shortcut property
            for access to the <c>Connection.ConnectionString</c> property of the <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Command"/>.</p>
            <note type="Compact Framework">This property is used in the design time for 
            the Compact Framework to set up the connection string. If it is set in the runtime,
            and no command was supplied, then new instance of the 
            <see cref="!:System.Data.SqlServerCe.SqlCeCommand"/> and the 
            <see cref="!:System.Data.SqlServerCe.SqlCeConnection"/> is created.
            </note></remarks>
            <value>The connection string for the Connection of the <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Command"/>, 
            default value is <see cref="F:System.String.Empty"/></value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.DataConnector.IsOpen">
            <summary>
            Gets the value indicating whether the DataConnector is open.
            </summary>
            <remarks>
            <p>When DataConnector is open, it is required to call <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Close"/> method
            before another call to <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Open"/> method.</p>
            <p>State of DataConnector is not the same as the state of the <c>Command.Connection</c>.
            When <c>Connector.Connection</c> was open when calling <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Open"/> method, it will 
            stay open after calling the <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.Close"/> method. Otherwise the 
            <c>Command.Connection</c> will be open/closed with the connector.</p>
            </remarks>
            <value><c>true</c> when connection is open, otherwise <c>false</c></value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.DataConnector.Current">
            <summary>
            Gets the current row of data.
            </summary>
            <remarks>
            Current data can be accessed multiple times until the call to a <see cref="M:Resco.Controls.AdvancedComboBox.DataConnector.MoveNext"/> method.
            </remarks>
            <value><see cref="T:System.Collections.IList"/> containing the data from the source.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.DataConnector.Mapping">
            <summary>
            Gets the field mapping of the data.
            </summary>
            <value>The <see cref="P:Resco.Controls.AdvancedComboBox.DataConnector.Mapping"/> of the data.</value>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ToolTip">
            <summary>
            Summary description for ToolTip.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ItemCollection">
            <summary>
            Collection of Items for an AdvancedComboBox.
            </summary>
            <remarks>
            <p>ItemCollection is derived from <see cref="T:System.Collections.CollectionBase"/> and supports <see cref="M:Resco.Controls.AdvancedComboBox.ItemCollection.Add(Resco.Controls.AdvancedComboBox.ListItem)"/>, 
            <see cref="M:Resco.Controls.AdvancedComboBox.ItemCollection.Insert(System.Int32,Resco.Controls.AdvancedComboBox.ListItem)"/> and <see cref="M:Resco.Controls.AdvancedComboBox.ItemCollection.Remove(System.Object)"/> methods.
            The <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> can only be in one ItemCollection at a time. Whether the ListItem is in collection
            can be determined by the <see cref="M:Resco.Controls.AdvancedComboBox.ItemCollection.Contains(System.Object)"/> method.
            The index of the item can be determined by the <see cref="M:Resco.Controls.AdvancedComboBox.ItemCollection.IndexOf(System.Object)"/> method. ListItem collection can 
            be accessed through the indexer <see cref="P:Resco.Controls.AdvancedComboBox.ItemCollection.Item(System.Int32)"/>.
            </p>
            <p>
            Special method <see cref="M:Resco.Controls.AdvancedComboBox.ItemCollection.RemoveByMapping(Resco.Controls.AdvancedComboBox.Mapping)"/> can be used to remove all the items with the same
            <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/>, which are suppossed to come from the same data source.
            </p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.Add(Resco.Controls.AdvancedComboBox.ListItem)">
            <summary>
            Adds a ListItem to the end of the ItemCollection.
            </summary>
            <param name="item">The ItemTemplate to be added to the end of the ItemCollection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.Add(System.Object)">
            <summary>
            Adds a object to the end of the ItemCollection.
            </summary>
            <param name="obj">The object to be added to the end of the ItemCollection.</param>
            <remarks>
             Object is encapsulated by BoundItem. <see cref="!:TemplateIndex"/>, <see cref="!:SelectedTemplateIndex"/>,
             <see cref="!:AlternateTemplateIndex"/> and <see cref="!:TextBoxTemplateIndex"/> are obtained from 
             <see cref="T:Resco.Controls.AdvancedComboBox.AdvancedComboBox"/>.
            </remarks>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.Insert(System.Int32,Resco.Controls.AdvancedComboBox.ListItem)">
            <summary>
            Inserts an element into the ItemCollection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The ListItem to insert.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an object into the ItemCollection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="obj">The object to insert.</param>
            <remarks>
             Object is encapsulated by BoundItem. <see cref="!:TemplateIndex"/>, <see cref="!:SelectedTemplateIndex"/>,
             <see cref="!:AlternateTemplateIndex"/> and <see cref="!:TextBoxTemplateIndex"/> are obtained from 
             <see cref="T:Resco.Controls.AdvancedComboBox.AdvancedComboBox"/>.
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the ItemCollection.
            </summary>
            <param name="obj">The <i>object</i> to remove from the ItemCollection.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.Remove(Resco.Controls.AdvancedComboBox.ListItem)">
            <summary>
            Removes the first occurrence of a specific ListItem from the ItemCollection.
            </summary>
            <param name="item">The <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> to remove from the ItemCollection.</param>
            <remarks>Used by the <see cref="M:Resco.Controls.AdvancedComboBox.ListItem.Delete"/> method.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified <i>object</i> and returns the zero-based index of the first occurrence within the entire ItemCollection.
            </summary>
            <param name="obj">The <i>object</i> to locate in the ItemCollection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire ItemCollection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.IndexOf(Resco.Controls.AdvancedComboBox.ListItem)">
            <summary>
            Searches for the specified <i>ListItem</i> and returns the zero-based index of the first occurrence within the entire ItemCollection.
            </summary>
            <param name="item">The <i>ListItem</i> to locate in the ItemCollection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire ItemCollection, if found; otherwise, -1.</returns>	
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.Contains(System.Object)">
            <summary>
            Determines whether the ItemCollection contains a specific element.
            </summary>
            <param name="obj">The <i>object</i> to locate in the ItemCollection.</param>
            <returns><b>true</b> if the ItemCollection contains the specified value; otherwise, <b>false</b></returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.Contains(Resco.Controls.AdvancedComboBox.ListItem)">
            <summary>
            Determines whether the ItemCollection contains a specific element.
            </summary>
            <param name="item">The <i>ListItem</i> to locate in the ItemCollection.</param>
            <returns><b>true</b> if the ItemCollection contains the specified value; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the ItemCollection.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the ItemCollection.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the ItemCollection.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the ItemCollection.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param> 
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.RemoveByMapping(Resco.Controls.AdvancedComboBox.Mapping)">
            <summary>
            Removes all items with selected field mapping from the ItemCollection.
            </summary>
            <param name="fieldNames">The <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/> of names, that identifies items 
            from the same source.</param>
            <returns>Index of first removed item.</returns>
            <remarks>This method is used by the <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Reload"/> method.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemCollection.Draw(System.Drawing.Graphics,Resco.Controls.AdvancedComboBox.TemplateSet,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Draw the items.
            </summary>
            <param name="gr">Graphics object to draw into.</param>
            <param name="ts">Set of templates that will be used for drawing items.</param>
            <param name="width">The width of templates.</param>
            <param name="ymax">Maximum height (in pixels) we have at our disposal for drawing (the height of client
            area).</param>
            <param name="iItem">Index of a item to start drawing from.</param>
            <param name="iItemOffset">Offset of the first drawn item (which index is iItem).</param>
            <returns></returns>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the ListItem at the specified index. 
            </summary>
            <value>The <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> at the specified <paramref name="index"/>.</value>
            <exception cref="T:System.IndexOutOfRangeException">If index is less then 0 or greater or equal to item count, exception is thrown.</exception>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemCollection.Item(System.Int32,System.Boolean)">
            <summary>
            Gets or sets the <i>ListItem</i> or data bound <i>object</i> at the specified index.
            </summary>
            <param name="index">The index of the <i>ListItem</i> or data bound <i>object</i> in the collection to set or retrieve.</param>
            <param name="boundData">Determine whether to return <i>ListItem</i> or data bound <i>object</i>.</param>
            <returns>The <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> or data bound <i>object</i> at the specified <paramref name="index"/></returns>
            <exception cref="T:System.IndexOutOfRangeException">If index is less then 0 or greater or equal to item count, exception is thrown.</exception>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ImageCell">
            <summary>
            ImageCell is a Cell used to display images from ImageList.
            </summary>
            <remarks>
            <p>The ImageCell is the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> capable to display <see cref="T:System.Drawing.Image"/>s from 
            the <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageList"/>.</p>
            <p>Displayed image is determined by the constant <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageIndex"/>, or is taken from
            the <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> when setting the non-constant <see cref="P:Resco.Controls.AdvancedComboBox.Cell.CellSource"/>. 
            Constant image index is useful for button-like cells, preferably in selected item templates, 
            e. g. shopping cart icon on the detail of product info. Non-constant index is useful for giving
            data dependent graphical information, e.g. flags or fancy background, as seen in the packaged 
            </p>
            <p>Images can be resized to the size of the Cell if the <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.AutoResize"/> property 
            is set to true, or can be aligned in the cell by the chosen <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.Alignment"/>. 
            One color can be made transparent by setting the <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.TransparentColor"/> property 
            (limited on the CompactFramework). Or you can make transparent the color in the pixel (0,0)
            of every image by setting the <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.AutoTransparent"/> property to true.</p>
            <note>Images from the image list are cached for the better performance, so be sure to 
            set the <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageList"/> property again, when some changes were made in the 
            image list.</note>
            </remarks>  
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.Cell">
            <summary>
            Cell is the basic cell from which other cell types are derived.
            </summary>   
            <remarks>
            <p>The Cell is the basic building block of <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/>. Cell has defined 
            <see cref="P:Resco.Controls.AdvancedComboBox.Cell.Bounds"/> relative to its owner item template. Around the cell can be drawn 
            <see cref="P:Resco.Controls.AdvancedComboBox.Cell.Border"/>, which is actually one pixel outside of the cell bounds. 
            The Cell has defined <see cref="P:Resco.Controls.AdvancedComboBox.Cell.BackColor"/> for drawing the background and 
            <see cref="P:Resco.Controls.AdvancedComboBox.Cell.ForeColor"/> for drawing the contents. Their default value is 
            <see cref="P:System.Drawing.Color.Transparent"/>, i.e. the actual color is determined by the 
            <see cref="P:Resco.Controls.AdvancedComboBox.ItemTemplate.BackColor"/> or <see cref="P:Resco.Controls.AdvancedComboBox.ItemTemplate.ForeColor"/> of the owner 
            <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/>.</p>
            <p>Cell is bound to a data from displayed item by the <see cref="P:Resco.Controls.AdvancedComboBox.Cell.CellSource"/>. The actual 
            data can be determined by the indexer <see cref="P:Resco.Controls.AdvancedComboBox.Cell.Item(Resco.Controls.AdvancedComboBox.ListItem,System.Int32)"/>.</p> 
            <note type="inheritinfo">During the further developement of the AdvancedComboBox control 
            non-public properties and methods can be a subject to change. For the example of derived
            cell see also <seealso cref="M:Resco.Controls.AdvancedComboBox.Cell.#ctor(Resco.Controls.AdvancedComboBox.Cell)">Copy constructor</seealso> and <see cref="P:Resco.Controls.AdvancedComboBox.Cell.CurrentItem"/> property.</note>
            </remarks>  
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.#ctor">
            <summary>
            Empty constructor, sets default values.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.#ctor(Resco.Controls.AdvancedComboBox.Cell)">
            <summary>
            Copy constructor, gets values from other cell.
            </summary>
            <param name="cell">Source cell to copy values from.</param>
            <remarks>Use this constructor in derived cell types. You can use 
            the graphical designer to design empty cell and than assign values quickly 
            with this constructor.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.Clone">
            <summary>
            Clones the Cell.
            </summary>
            <remarks>The Cell cannot be used in more then one ItemTemplate. 
            Use this method to create the copy of the cell in another template.</remarks>
            <returns>A new Cell with the same properties as the current Cell.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Object,Resco.Controls.AdvancedComboBox.ItemSpecificCellProperties)">
            <summary>
            Draws the cell.
            </summary>
            <param name="gr">Drawing surface</param>
            <param name="xOffset">offset of the item from left</param>
            <param name="yOffset">offset of the item from top</param>
            <param name="rowHeight">height of item</param>
            <param name="gridWidth">width of item</param>
            <param name="data">data to display</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.GetColor(Resco.Controls.AdvancedComboBox.ColorCategory)">
            <summary>
            Gets the <see cref="T:System.Drawing.Color"/> of selected <see cref="T:Resco.Controls.AdvancedComboBox.ColorCategory"/>, resolves transparency issues.
            </summary>
            <param name="c"><see cref="T:Resco.Controls.AdvancedComboBox.ColorCategory"/> that denotes the <see cref="T:System.Drawing.Color"/>.</param>
            <returns>The actual <see cref="T:System.Drawing.Color"/> of selected <see cref="T:Resco.Controls.AdvancedComboBox.ColorCategory"/>.</returns>
            <remarks>Actual usage of this method is the support for transparent values.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background of the cell.
            </summary>
            <param name="gr">drawing surface</param>
            <param name="drawbounds">bounds of cell</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.DrawSelection(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws visual representation of selection.
            </summary>
            <param name="gr">drawing surface</param>
            <param name="drawbounds">bounds of cell</param>
            <remarks>
            In case that this cell is selected, this method is used to draw something meaningful into this cell
            to distinguish it from not unselected cells.
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Object)">
            <summary>
            Draws the contents of the cell.
            </summary>
            <param name="gr">drawing surface</param>
            <param name="drawbounds">bounds of cell</param>
            <param name="data">data to display</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the border of cell
            </summary>
            <param name="gr">drawing surface</param>
            <param name="drawbounds">bounds of cell</param>
            <remarks>Border is draw outside the <see cref="P:Resco.Controls.AdvancedComboBox.Cell.Bounds"/> of the cell, so you 
            should leave space for it. Border colors are determinded by the <see cref="M:Resco.Controls.AdvancedComboBox.Cell.GetColor(Resco.Controls.AdvancedComboBox.ColorCategory)"/>
            method. Overall look of the border is determined by the <see cref="T:Resco.Controls.AdvancedComboBox.BorderType"/>.
            </remarks>
            <seealso cref="T:Resco.Controls.AdvancedComboBox.BorderType"/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.GetAutoHeight(Resco.Controls.AdvancedComboBox.ListItem,System.Int32,Resco.Controls.AdvancedComboBox.ItemSpecificCellProperties)">
            <summary>
            Returns the height when displaying the Item with autoheight feature enabled.
            </summary>
            <param name="i">Item with data.</param>
            <param name="index">Index of the cell.</param>
            <returns>Height that will be used to display cell.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.CalculateBounds(System.Int32,System.Int32,Resco.Controls.AdvancedComboBox.ListItem,System.Int32,Resco.Controls.AdvancedComboBox.ItemSpecificCellProperties)">
            <summary>
            Calculates the current bounds of cell, in the item rectangle.
            </summary>
            <param name="xOffset">offset of item from left</param>
            <param name="yOffset">offset of item from top</param>
            <param name="rowHeight">height of item</param>
            <param name="gridWidth">width of item</param>
            <returns>rectangle with actual bounds</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.CalculateCellWidth(System.Int32)">
            <summary>
            Gets the cell width based on grid width.
            </summary>
            <remarks>Calculates the width of cells with -1 width in Bounds.</remarks>
            <param name="gridWidth">The width of the AdvancedComboBox.</param>
            <returns>Recalculated cell width.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.ShouldSerializeBorder">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.Cell.Border"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.OnChanged(System.Object,Resco.Controls.AdvancedComboBox.ComboBoxEventArgsType,Resco.Controls.AdvancedComboBox.ComboBoxArgs)">
            <summary>
            Fires the changed event (for inheritors)
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Cell.OnCellEntered(Resco.Controls.AdvancedComboBox.CellEnteredEventArgs)">
            <summary>
            Fires the CellEntered event.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Cell.CurrentData">
            <summary>
            Contains current data.
            </summary>
            <remarks>Data are considered to be valid only during the duration of the <see cref="M:Resco.Controls.AdvancedComboBox.Cell.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Object,Resco.Controls.AdvancedComboBox.ItemSpecificCellProperties)"/> method.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.Bounds">
            <summary>
            Gets or sets the bounds of a cell relative to displayed item.
            </summary>
            <value>The bounds of a cell relative to displayed item.</value>
            <remarks>-1 in any of the parameters of the <see cref="T:System.Drawing.Rectangle"/> creating bounds 
            will be recalculated after adding to <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/>. If 
            <see cref="P:System.Drawing.Rectangle.Width"/> is set to -1, the actual width remaining to the end of the
             AdvancedComboBox is used, thus allowing the cell to resize the cell when scrollbars 
             visibility is changed.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.BackColor">
            <summary>
            Gets or sets the background color of a cell.
            </summary>
            <value>The background <see cref="T:System.Drawing.Color"/> of a cell, default 
            <see cref="P:System.Drawing.Color.Transparent"/></value>
            <remarks>When the BackColor is <see cref="P:System.Drawing.Color.Transparent"/>, no background is drawn,
            and cell seems transparent.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.ForeColor">
            <summary>
            Gets or sets the foreground color of a cell.
            </summary>
            <value>The foreground <see cref="T:System.Drawing.Color"/> of a cell.</value>
            <remarks>When the ForeColor is <see cref="P:System.Drawing.Color.Transparent"/>, the color for the foreground,
            is taken from the <see cref="P:Resco.Controls.AdvancedComboBox.ItemTemplate.ForeColor"/> property of the owner item template.
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.AutoHeight">
            <summary>
            Determines whether cell changes height according to data.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.Owner">
            <summary>
            Gets or sets the ItemTemplate, which owns the cell.
            </summary>
            <value>The <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/> which is the owner of this Cell.</value>
            <remarks>Cell can be in only one template at a time, use a copy constructor 
            <see cref="M:Resco.Controls.AdvancedComboBox.Cell.#ctor(Resco.Controls.AdvancedComboBox.Cell)"/> to create the Cell with the same properties but without owner.
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.Parent">
            <summary>
            Gets the reference to parent AdvancedComboBox.
            </summary>
            <value>Reference to parent AdvancedComboBox or <see langref="null"/>.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.CellSource">
            <summary>
            Gets or sets the CellSource of a Cell.
            </summary>
            <value>The <see cref="P:Resco.Controls.AdvancedComboBox.Cell.CellSource"/> of a Cell.</value>
            <remarks>The <see cref="P:Resco.Controls.AdvancedComboBox.Cell.CellSource"/> is used when getting the data from
            the <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> with the indexer <see cref="P:Resco.Controls.AdvancedComboBox.Cell.Item(Resco.Controls.AdvancedComboBox.ListItem,System.Int32)"/>.
            </remarks>
            <seealso cref="P:Resco.Controls.AdvancedComboBox.Cell.CellSource"/>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.Item(Resco.Controls.AdvancedComboBox.ListItem,System.Int32)">
            <summary>
            Gets or sets the data for given cell on given cell index.
            </summary>
            <value>The data from the given <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/>, when the cell has the given index.</value>
            <remarks><paramref name="index"/> is used when binding to default data source, with 
            the <see cref="!:Resco.Controls.CellSource.ColumnIndex"/> set to -1. Then the <paramref name="index"/>-th 
            column from the item is taken. Otherwise the source of data are determined by the 
            <see cref="P:Resco.Controls.AdvancedComboBox.Cell.CellSource"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.Anchor">
            <summary>
            Gets or sets the AnchorStyle of a cell.
            </summary>
            <value>The <see cref="T:System.Windows.Forms.AnchorStyles"/> of a cell.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.Border">
            <summary>
            Gets or sets the BorderType of a cell.
            </summary>
            <value>The <see cref="T:Resco.Controls.AdvancedComboBox.BorderType"/> of a cell.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.CustomizeCell">
            <summary>
            Gets or sets the boolean value indicating whether cells can be customized during drawing of AdvancedComboBox.
            </summary>
            <value><b>true</b> enable cell customization, otherwise <b>false</b>.</value>
            <remarks>If <c>CustomizeCell</c> is set to true, then <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CustomizeCell"/>
            event is called when cell has to be displayed.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.Customizing">
            <summary>
            Gets the value indicating wether the cell is currently customizing via CustomizeCell event.
            </summary>
            <remarks><b>Customizing</b> can be used to determine wether the cell is customizing via CustomizeCell event and
            do additional task. For example, <see cref="P:Resco.Controls.AdvancedComboBox.Cell.Bounds"/> does not notify AdvancedList about change, because new Bounds
            are related to that customizing cell only.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.Name">
            <summary>
            Gets or sets the name of the Cell.
            </summary>
            <value>The name of the cell.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.DesignName">
            <summary>
            Gets or sets the design-time name of the Cell.
            </summary>
            <value>The design-time name of the cell.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.Selectable">
            <summary>
            Gets or sets a value indicating whether the current cell can be selected.
            </summary>
            <remarks>
            If the cell is selectable, you can set the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/> property to select
            this cell. A rectangle will be drawn around the cell to indicate that this cell is selected. You can override
            this behavior by implementing your own <see cref="M:Resco.Controls.AdvancedComboBox.Cell.DrawSelection(System.Drawing.Graphics,System.Drawing.Rectangle)"/> method. You can also use the
            right and left arrow keys, if <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.KeyNavigation"/> is turned on to select the selectable
            cells within the currently selected item's ItemTemplate. If the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.KeyNavigation"/> is
            turned on, AdvancedComboBox uses the <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.NextSelectableCell"/> or
            <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.PreviousSelectableCell"/> methods to select next or previous selectable cell.
            </remarks>
            <seealso cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/>
            <seealso cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.NextSelectableCell"/>
            <seealso cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.PreviousSelectableCell"/>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.Graphics">
            <summary>
            Gets the reference to current graphics to draw.
            </summary>
            <value><see cref="P:Resco.Controls.AdvancedComboBox.Cell.Graphics"/> which can be used to draw to or <see langref="null"/>.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Cell.CurrentItem">
            <summary>
            Gets During drawing contains the reference to current item.
            </summary>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.Cell.CellEntered">
            <summary>
            This event is raised if either a selectable cell is clicked by a mouse or enter key is pressed while
            this cell is selected.
            </summary>
            <remarks>
            Note that <see cref="!:AdvancedComboBox.Cell.Selected"/> property must be set to true for this event to
            fire. Also <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.KeyNavigation"/> must be turned on.
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ImageCell.#ctor">
            <summary>
            Empty constructor, sets default values.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ImageCell.#ctor(Resco.Controls.AdvancedComboBox.ImageCell)">
            <summary>
            Copy constructor.
            </summary>
            <param name="cell">The ImageCell to create copy from.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ImageCell.Clone">
            <summary>
            Clones the ImageCell.
            </summary>
            <remarks>The Cell cannot be used in more then one ItemTemplate. 
            Use this method to create the copy of the cell in another template.</remarks>
            <returns>A new ImageCell with the same properties as the current ImageCell.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ImageCell.GetImage(System.Object)">
            <summary>
            Gets the image from image list based on data and cell source.
            Default implementation uses image cache for speedup. 
            </summary>
            <param name="data">cell display data</param>
            <returns>image to display</returns>
            <remarks><note type="inheritinfo">Override this property if you want to provide 
            custom images, e.g. from database.</note></remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ImageCell.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Object)">
            <summary>
            Draws the contents of the cell.
            </summary>
            <param name="gr">drawing surface</param>
            <param name="drawbounds">bounds of cell</param>
            <param name="data">data to display</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ImageCell.ShouldSerializeImageList">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageList"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ImageCell.ShouldSerializeAlignment">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.Alignment"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageList">
            <summary>
            Gets or sets the image list.
            </summary>
            <value>The <see cref="T:System.Windows.Forms.ImageList"/> containing the images drawn 
            by the cell.</value>
            <remarks>
            <note>Images from the image list are cached for the better performance, so be sure to 
            set the <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageList"/> property again, when some changes were made in the 
            image list.</note>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ImageCell.TransparentColor">
            <summary>
            Gets or sets the transparent color.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/>, which is made transparent.</value>
            <remarks>The default value is <see cref="P:System.Drawing.Color.Transparent"/>, which means that
            no color in images is made transparent. Setting this property may not result in the
            desired effect on the Compact Framework due to a use of 
            <see cref="T:System.Drawing.Imaging.ImageAttributes"/>
            to set the color key.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ImageCell.AutoTransparent">
            <summary>
            Gets or sets autotransparency.
            </summary>
            <value> If true, color in in pixel (0,0) of each image is made transparent. </value>
            <remarks>Autotransparency can slow down the drawing of the cell.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ImageCell.AutoResize">
            <summary>
            Gets or sets autoresize. 
            </summary>
            <value>If true, the image is sized to the size of cell.</value>
            <remarks>Due to resizing, the image can be deformed.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ImageCell.Alignment">
            <summary>
            Gets or sets the image alignment.
            </summary>
            <value>The image <see cref="!:Resco.Controls.Alignment"/>.</value>
            <remarks>If the image does not fit to cell, it is cropped.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageIndex">
            <summary>
            Gets or sets image index for the cell.
            </summary>
            <value>
            Positive value means constant index in image list.
            Otherwise index in image list is taken from data.
            </value>
            <remarks>By setting the ImageIndex, the <see cref="T:Resco.Controls.AdvancedComboBox.CellSource"/> is changed 
            to <see cref="!:Resco.Controls.CellSourceType.Constant"/>, and contains the image index.</remarks>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ItemTemplate">
            <summary>
            ItemTemplate is the template for displaying row of data.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ItemTemplate.Parent">
            <summary>
            The reference to parent AdvancedComboBox
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ItemTemplate.CurrentItem">
            <summary>
            During drawing contains the reference to current row.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.ToString">
            <summary>
            Returns a String that represents the current ItemTemplate.
            </summary>
            <returns>A String that represents the current ItemTemplate.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.#ctor">
            <summary>
            Creates the new instance of ItemTemplate.
            </summary>
            <remarks>Constructor sets the default values,
            default height of 16, background of the <see cref="P:System.Drawing.SystemColors.ControlLightLight"/> color
            and foreground of the <see cref="P:System.Drawing.SystemColors.ControlText"/> color.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.Clone">
            <summary>
            Creates a copy of the current ItemTemplate.
            </summary>
            <returns>The copy of the current ItemTemplate.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.Draw(System.Drawing.Graphics,System.Int32,System.Int32,Resco.Controls.AdvancedComboBox.ListItem,System.Int32,System.Int32)">
            <summary>
            Draws the Item on given offset with given maximal width.
            </summary>
            <param name="gr">Graphics to draw.</param>
            <param name="xOffset">Offset from the left.</param>
            <param name="yOffset">Offset from the top.</param>
            <param name="item">Item with the data to display.</param>
            <param name="width">Width of the control.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.GetHeight(Resco.Controls.AdvancedComboBox.ListItem)">
            <summary>
            Get the height for the given item, with respect to autoheight.
            </summary>
            <param name="item">ListItem displayed.</param>
            <returns>Current height of the item when displayed by this template.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.ShouldSerializeGradientBackColor">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.ItemTemplate.GradientBackColor"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.OnChange(System.Object,Resco.Controls.AdvancedComboBox.ComboBoxEventArgsType,Resco.Controls.AdvancedComboBox.ComboBoxArgs)">
            <summary>
            Raises the Changed event to repaint the parent control.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.OnCellEntered(Resco.Controls.AdvancedComboBox.CellEnteredMainEventArgs)">
            <summary>
            Fires the <see cref="!:AdvancedComboBox.Cell.CellEntered"/> event for an individual cell.
            </summary>
            <param name="sender">Object that raised the event i.e. ItemTemplate.</param>
            <param name="e">Arguments for this event handler.</param>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.Name">
            <summary>
            Gets or sets the name of the ItemTemplate.
            </summary>
            <value>The name of the ItemTemplate</value>
            <remarks>Reserved for future use.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.CellTemplates">
            <summary>
            Gets the <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection"/> which contains Cells to display values.
            </summary>
            <value>The <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection"/>.</value>
            <remarks><p>CellCollection stores the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/>s, that are part of this row template
            and are essential in displaying informations in the <see cref="T:Resco.Controls.AdvancedComboBox.AdvancedComboBox"/>.</p>
            <p>Use the indexer <see cref="P:Resco.Controls.AdvancedComboBox.ItemTemplate.Item(System.Int32)"/> instead of this property for quick access.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.Item(System.Int32)">
            <summary>
            Gets or sets the Cell at the given index.
            </summary>
            <value>The <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> at the given index.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.Item(System.String)">
            <summary>
            Gets or sets the Cell with the given name.
            </summary>
            <value>The <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> with the given name.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.Height">
            <summary>
            Gets or sets the height of the ItemTemplate.
            </summary>
            <value>The height of the ItemTemplate.</value>
            <remarks></remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.BackColor">
            <summary>
            Gets or sets the background color of the ItemTemplate.
            </summary>
            <value>The background <see cref="T:System.Drawing.Color"/> of the ItemTemplate.</value>
            <remarks>The item background is drawn with this color.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.ForeColor">
            <summary>
            Gets or sets the foreground color for the ItemTemplate.
            </summary>
            <value>The foreground <see cref="T:System.Drawing.Color"/> for the ItemTemplate.</value>
            <remarks>
            ItemTemplates ForeColor is used by the Cell when its <see cref="P:Resco.Controls.AdvancedComboBox.Cell.ForeColor"/> is set 
            to <see cref="P:System.Drawing.Color.Transparent"/>.
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.GradientBackColor">
            <summary>
            Get or sets the gradient back color.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.UseGradient">
            <summary>
            Get or sets whether to use gradient color instead of BackColor.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection">
            <summary>
            Collection of <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/>s in <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/>.
            </summary>
            <remarks>
            <p>CellCollection is derived from <see cref="T:System.Collections.CollectionBase"/> and supports <see cref="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.Add(Resco.Controls.AdvancedComboBox.Cell)"/>, 
            <see cref="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.Insert(System.Int32,Resco.Controls.AdvancedComboBox.Cell)"/> and <see cref="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.Remove(Resco.Controls.AdvancedComboBox.Cell)"/> methods.
            The <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> can only be in one <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/> at a time. 
            Whether the cell is in collection can be determined by the <see cref="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.Contains(Resco.Controls.AdvancedComboBox.Cell)"/> method.
            The index of the cell can be determined by the <see cref="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.IndexOf(Resco.Controls.AdvancedComboBox.Cell)"/> method. 
            CellCollection can be accessed through the indexer by the cell index. 
            </p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.#ctor(Resco.Controls.AdvancedComboBox.ItemTemplate)">
            <summary>
            Creates new CellCollection for the ItemTemplate.
            </summary>
            <param name="rt">The ItemTemplate which owns the cell collection</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.Add(Resco.Controls.AdvancedComboBox.Cell)">
            <summary>
            Adds a Cell to the end of the CellCollection.
            </summary>
            <param name="value">The ItemTemplate to be added to the end of the CellCollection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.IndexOf(Resco.Controls.AdvancedComboBox.Cell)">
            <summary>
            Searches for the specified Cell and returns the zero-based index of the first occurrence within the entire CellCollection.
            </summary>
            <param name="value">The Cell to locate in the CellCollection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire CellCollection, if found; otherwise, -1.</returns>	
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.Insert(System.Int32,Resco.Controls.AdvancedComboBox.Cell)">
            <summary>
            Inserts an element into the CellCollection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Cell to insert.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.Remove(Resco.Controls.AdvancedComboBox.Cell)">
            <summary>
            Removes the first occurrence of a specific Cell from the CellCollection.
            </summary>
            <param name="value">The Cell to remove from the CellCollection.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.Contains(Resco.Controls.AdvancedComboBox.Cell)">
            <summary>
            Determines whether the CellCollection contains a specific element.
            </summary>
            <param name="value">The Cell to locate in the CellCollection.</param>
            <returns>true if the CellCollection contains the specified value; otherwise, false.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.OnInsert(System.Int32,System.Object)">
            <summary>
             Performs additional custom processes before inserting a new element into the CellCollection.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param> 
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the CellCollection.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param> 
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes when setting a value in the CellCollection.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a value in the CellCollection.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the CellCollection.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the CellCollection.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the CellCollection.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.Item(System.Int32)">
            <summary>
            Gets the Cell at the specified index. 
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemTemplate.CellCollection.Item(System.String)">
            <summary>
            Gets the Cell with the specified name. 
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Conversion.ColorFromString(System.String)">
            <summary>
            Converts string representation of color to <see cref="T:System.Drawing.Color"/>.
            </summary>
            <remarks>The function searches first known colors, then system colors
            and then tries to convert the color from ARGB integer (hexadecimal).</remarks>
            <example>
            <p>Known colors: <c>Conversion.ColorFromString("Gray")</c></p>
            <p>System colors: <c>Conversion.ColorFromString("Control")</c></p>
            <p>ARGB value: <c>Conversion.ColorFromString("FF808080")</c></p>
            </example>
            <param name="sColor">String representation of color.</param>
            <returns><see cref="T:System.Drawing.Color"/> converted from string representation.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Conversion.RectangleFromString(System.String)">
            <summary>
            Converts string representation of rectangle to <see cref="T:System.Drawing.Rectangle"/>.
            </summary>
            <remarks>The function converts the comma separated values of X,Y,Width,Height.</remarks>
            <example>
            <p>Rectangle: <c>Conversion.ColorFromRectangle("0,0,50,16")</c></p>
            </example>
            <param name="sRect">String representation of rectangle.</param>
            <returns><see cref="T:System.Drawing.Rectangle"/> converted from string representation.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Conversion.FontFromString(System.String)">
            <summary>
            Converts string representation of font to <see cref="T:System.Drawing.Font"/>.
            </summary>
            <param name="sFont">String representation of font.</param>
            <returns><see cref="T:System.Drawing.Font"/> converted from string representation.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Conversion.EnumFromString(System.Type,System.String)">
            <summary>
            Converts string representation of enumeration values to <see cref="T:System.Enum"/>.
            </summary>
            <remarks>The function converts the string representing the value from the enumeration.</remarks>
            <note type="caution">On compact framework the flags are not supported.</note>
            <example>
            <p>Alignment: <c>Conversion.ColorFromRectangle(typeof(Resco.Controls.Alignment),"BottomLeft")</c></p>
            </example>
            <param name="sValue">String representation of rectangle.</param>
            <param name="enumType">Type of enumeration</param>
            <returns>Value of type <paramref name="enumType"/> converted from string representation.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Conversion.StringDataFromString(System.String)">
            <summary>
            Converts the data from the comma separated strings to string array. 
            </summary>
            <param name="sData">Comma separated strings.</param>
            <returns>Array of strings.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Conversion.CellSourceFromString(System.String)">
            <summary>
            Converts the data from the string to cell source. 
            </summary>
            <seealso cref="T:Resco.Controls.AdvancedComboBox.CellSource"/>
            <param name="sData">String representing the cell source.</param>
            <returns><see cref="T:Resco.Controls.AdvancedComboBox.CellSource"/> corresponding to <paramref name="sData"/>.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Conversion.GradientColorFromString(System.String)">
            <summary>
            Converts string representation of GradientColor to <see cref="T:Resco.Controls.AdvancedComboBox.GradientColor"/>.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Conversion.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            Sets the property of object.
            </summary>
            <remarks>Handles special types of properties: Colors, Rectangles and CellSource.</remarks>
            <param name="obj">Object to apply.</param>
            <param name="name">Name of the property.</param>
            <param name="value">New value of the property.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ButtonCell.#ctor">
            <summary>
            Empty constructor, sets default values.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ButtonCell.#ctor(Resco.Controls.AdvancedComboBox.ButtonCell)">
            <summary>
            Copy constructor.
            </summary>
            <param name="cell">The ButtonCell to create copy from.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ButtonCell.Clone">
            <summary>
            Clones the ButtonCell.
            </summary>
            <remarks>The Cell cannot be used in more then one ItemTemplate. 
            Use this method to create the copy of the cell in another template.</remarks>
            <returns>A new ButtonCell with the same properties as the current ButtonCell.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ButtonCell.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Object)">
            <summary>
            Draws the contents of the cell.
            </summary>
            <param name="gr">drawing surface</param>
            <param name="drawbounds">bounds of cell</param>
            <param name="data">data to display</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ButtonCell.ShouldSerializeImageList">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImageList"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ButtonCell.ShouldSerializeButtonStyle">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.ButtonCell.ButtonStyle"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ButtonCell.ShouldSerializeTextAlignment">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.ButtonCell.TextAlignment"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ButtonCell.ShouldSerializeImageAlignment">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImageAlignment"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImageList">
            <summary>
            Gets or sets the image list.
            </summary>
            <value>The <see cref="T:System.Windows.Forms.ImageList"/> containing the images drawn 
            by the button.</value>
            If no ImageList is associated with button cell, images passed to <see cref="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImageDefault"/>,
            <see cref="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImageDefaultVGA"/>, <see cref="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImagePressed"/> and <see cref="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImagePressedVGA"/> are used
            when drawing content of ButtonCell.
            <remarks>
            <note>Images from the image list are cached for the better performance, so be sure to 
            set the <see cref="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImageList"/> property again, when some changes were made in the 
            image list. Or call <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ResetImageCache"/> metohd to clear cache.</note>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImageIndex">
            <summary>
            Gets or sets image index for the cell.
            </summary>
            <value>
            Positive value means constant index in image list.
            Otherwise index in image list is taken from data.
            </value>
            <remarks>By setting the ImageIndex, the <see cref="T:Resco.Controls.AdvancedComboBox.CellSource"/> is changed 
            to <see cref="!:Resco.Controls.CellSourceType.Constant"/>, and contains the image index.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.ButtonStyle">
            <summary>
            Gets or sets the button's type.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.Text">
            <summary>
            Gets or sets the text that is diplayed on the button.
            </summary>
            <value>The text drawn on the button.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.TextFont">
            <summary>
            Gets or sets the font for displaying the text.
            </summary>
            <value>The <see cref="T:System.Drawing.Font"/> for displaying the text.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>The text <see cref="!:Resco.Controls.Alignment"/>.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.TextPosition">
            <summary>
            Gets or sets the text position in button.
            </summary>
            <value>The button text position.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.BorderColor">
            <summary>
            Gets or sets the color of the button border.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the button border.</value>
            <remarks>Default value is <see cref="P:System.Drawing.SystemColors.ControlDark"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.PressedForeColor">
            <summary>
            Gets or sets the foreground color of the pressed button.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the pressed button foreground.</value>
            <remarks>Default value is <see cref="P:System.Drawing.SystemColors.Highlight"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.PressedBackColor">
            <summary>
            Gets or sets the background color of the pressed button.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the pressed button background.</value>
            <remarks>Default value is <see cref="P:System.Drawing.SystemColors.ControlDark"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.PressedBorderColor">
            <summary>
            Gets or sets the color of the pressed button border.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the pressed button border.</value>
            <remarks>Default value is <see cref="P:System.Drawing.SystemColors.ControlDarkDark"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImageDefault">
            <summary>
            Gets or sets the default image of button cell.
            </summary>
            <value>The <see cref="T:System.Drawing.Image"/> of the button cell.</value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImageDefaultVGA">
            <summary>
            Gets or sets the default image in VGA resolution of button cell.
            </summary>
            <value>The <see cref="T:System.Drawing.Image"/> of the button cell.</value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImagePressed">
            <summary>
            Gets or sets the pressed image of button cell.
            </summary>
            <value>The <see cref="T:System.Drawing.Image"/> of the button cell.</value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImagePressedVGA">
            <summary>
            Gets or sets the pressed image in VGA resolutin of button cell.
            </summary>
            <value>The <see cref="T:System.Drawing.Image"/> of the button cell.</value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImageAlignment">
            <summary>
            Gets or sets the image alignment.
            </summary>
            <value>The image <see cref="!:Resco.Controls.Alignment"/>.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.ImagePosition">
            <summary>
            Gets or sets the image position in button.
            </summary>
            <value>The button image position.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.AutoResizeImage">
            <summary>
            Gets or sets whether to stretch the DefaultImage.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.AutoTransparent">
            <summary>
            Gets or sets autotransparency.
            </summary>
            <value> If true, color in in pixel (0,0) of each image is made transparent. </value>
            <remarks>Autotransparency can slow down the drawing of the cell.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.TransparentColor">
            <summary>
            Gets or sets the transparent color.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/>, which is made transparent.</value>
            <remarks>The default value is <see cref="P:System.Drawing.Color.Transparent"/>, which means that
            no color in images is made transparent. Setting this property may not result in the
            desired effect on the Compact Framework due to a use of 
            <see cref="T:System.Drawing.Imaging.ImageAttributes"/>
            to set the color key.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.TouchMargin">
            <summary>
            Gets or sets the text touch margin of button in cell.
            </summary>
            <value>The button touch margin.</value>
            <remarks>
            The touch area of button is shrinked by amount of TouchMargin.
            Useful when two buttons are positioned close to each other.
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ButtonCell.Pressed">
            <summary>
            Used to store temporary information about button state
            </summary>
            <value>bool value representing the state of button.</value>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ButtonCell.ButtonType">
            <summary>
            Specifies the types of the ButtonCell.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ButtonCell.ButtonType.ImageButton">
            <summary>
            Standard button, shows an image. 
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ButtonCell.ButtonType.VistaStyleImageButton">
            <summary>
            Vista-style button, shows a vista-style background under image. 
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Design.ACBXmlSerializer.XmlSerialize(System.Xml.XmlWriter,System.Windows.Forms.Control)">
            <summary>
            Performs serialization of AdvancedComboBox object into an XML file.
            </summary>
            <param name="writer">XmlWriter object that will be used to write the xml data into.</param>
            <param name="advancedComboBox">AdvancedComboBox object that will be serialized.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Design.ACBXmlSerializer.SaveXml(System.String,System.Windows.Forms.Control)">
            <summary>
            This method is the Xml serialization starting point. It calls 
            <see cref="!:ALXmlSerializer.XmlSerialize(XmlWriter, AdvancedComboBox)"/> via
            <see cref="!:ALXmlSerializer.SaveXml(string, AdvancedComboBox)"/> method. 
            </summary>
            <param name="fileName">The name of the output XML file.</param>
            <param name="advancedComboBox">AdvancedComboBox ojbect that will be serialized.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Design.ACBXmlSerializer.SaveXml(System.Xml.XmlWriter,System.Windows.Forms.Control)">
            <summary>
            Saves the AdvancedComboBox object into XmlWriter object.
            </summary>
            <param name="writer">XmlWriter object to write XML data to.</param>
            <param name="advancedComboBox">AdvancedComboBox object that will be serialized.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Design.ACBXmlSerializer.SerializeCollection(System.Xml.XmlWriter,System.Object)">
            <summary>
            Saves an IEnumerable object's objects into a XmlWriter object.
            </summary>
            <remarks>
            This method takes a IEnumerable object as an input and a XmlWriter object that will be used to
            write the XML data into. It then enumerates through the IEnumerable saving every object's properties
            into an XML file.
            </remarks>
            <param name="writer">XmlWriter object to write the xml data into.</param>
            <param name="data">An IEnumerable object to enumerate through.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Design.ACBXmlSerializer.SerializeCell(System.Xml.XmlWriter,System.Object)">
            <summary>
            This method is used to serialize the <see cref="!:AdvancedComboBox.Cell"/> object.
            </summary>
            <remarks>
            The reason why a Cell is serialized differently from other objects is that there may be different
            types of cells (e.g. TextCell, ImageCell, ...) and the type of the cell is saved as an attribute of
            a &lt;Cell&gt; element.
            </remarks>
            <param name="writer">An XmlWriter object to save the XML data to. </param>
            <param name="cell">A Cell object whose properties will be serialized.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Design.ACBXmlSerializer.SerializeObjectsProperties(System.Xml.XmlWriter,System.Object)">
            <summary>
            Serializes object's properties into an XML file.
            </summary>
            <remarks>
            The method first gets all the properties of an object that have Browsable attribute set.
            Then if the properties do not have default values, then they are serialized. However, there are
            a few exceptions. Normally those properties that have DesignerSerializationVisibility set to Content
            are not serialized. But if they implement the IEnumerable interface then they are serialized.
            RowTemplate object is an exception to this - it does not get serialized even though it does implement
            IEnumerable. Furthermore, CellSource object does get serialized even though its
            DesignerSerializationVisibility attribute is set to Content and it does not implement IEnumerable.
            </remarks>
            <param name="writer">XmlWriter object to write XML data into.</param>
            <param name="o">Object to serialize.</param>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.SeparatorCell">
            <summary>
            SeparatorCell is a cell for displaying the separators.
            </summary>
            <remarks>
            <p>Separator cell is used to draw vertical or horizontal line in the middle of the cell, 
            dependent on the <see cref="P:Resco.Controls.AdvancedComboBox.SeparatorCell.SeparatorType"/>.</p>
            <p>Vertical separator separates the cells vertically and horizontal horizontally.
            Separator draws the lines in opposite direction of the separator type, i.e.
            when separator is <see cref="!:Resco.Controls.SeparatorType.Horizontal"/>, it draws 
            the vertical line, and when separator is <see cref="!:Resco.Controls.SeparatorType.Vertical"/>,
             it draws the horizontal line.</p>
             <p>Color of the line is determined by the <see cref="P:Resco.Controls.AdvancedComboBox.Cell.ForeColor"/> property.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.SeparatorCell.#ctor">
            <summary>
            Creates the new instance of a SeparatorCell.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.SeparatorCell.#ctor(Resco.Controls.AdvancedComboBox.SeparatorCell)">
            <summary>
            Copy constructor.
            </summary>
            <param name="cell">The Separator cell to create copy from.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.SeparatorCell.Clone">
            <summary>
            Clones the SeparatorCell.
            </summary>
            <remarks>The Cell cannot be used in more then one ItemTemplate. 
            Use this method to create the copy of the cell in another template.</remarks>
            <returns>A new SeparatorCell with the same properties as the current SeparatorCell.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.SeparatorCell.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Object)">
            <summary>
            Draws the contents of the cell.
            </summary>
            <param name="gr">drawing surface</param>
            <param name="drawbounds">bounds of cell</param>
            <param name="data">data to display</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.SeparatorCell.ShouldSerializeSeparatorType">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.SeparatorCell.SeparatorType"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.SeparatorCell.SeparatorType">
            <summary>
            Gets or sets the SeparatorType.
            </summary>
            <value>The <see cref="!:Resco.Controls.SeparatorType"/>, defining direction of the separator.
            </value>
            <remarks>
            Vertical separator separates the cells vertically and horizontal horizontally.
            Separator draws the lines in opposite direction of the separator type, i.e.
            when separator is <see cref="!:Resco.Controls.SeparatorType.Horizontal"/>, it draws 
            the vertical line, and when separator is <see cref="!:Resco.Controls.SeparatorType.Vertical"/>,
             it draws the horizontal line.
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.SeparatorCell.Border">
            <summary>
            SeparatorCell has no border.
            </summary>
            <value><see cref="F:Resco.Controls.AdvancedComboBox.BorderType.None"/></value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.SeparatorCell.CellSource">
            <summary>
            Separator ignores CellSource.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.#ctor(Resco.Controls.AdvancedComboBox.AdvancedComboBox)">
            <summary>
            Creates new instance of an AdvancedList.
            </summary>
            <remarks/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.ShouldSerializeGradientBackColor">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedList.GradientBackColor"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.OnItemSelect(Resco.Controls.AdvancedComboBox.ListItem,System.Int32)">
            <summary>
            Fires the ItemSelect event.
            </summary>
            <param name="item">ListItem that was selected.</param>
            <param name="index">Index of the item.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.EnsureVisible(Resco.Controls.AdvancedComboBox.ListItem)">
            <summary>
            Scrolls the control to ensure that chosen item is visible and returns the ListItem vertical offset.
            </summary>
            <param name="item">ListItem to display.</param>
            <returns>Offset of the ListItem from the top of the control.</returns>
            <remarks>This method will scroll the control so the desired item is diplayed on the screen.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.EnsureVisible(Resco.Controls.AdvancedComboBox.ListItem,System.Boolean)">
            <summary>
            Scrolls the control to ensure that chosen item is visible and returns the ListItem vertical offset.
            </summary>
            <param name="item">ListItem to display.</param>
            <param name="bTop">true, if the row should be positioned as the first item</param>
            <returns>Offset of the ListItem from the top of the control.</returns>
            <remarks>This method will scroll the control so the item with the desired index
             is diplayed on the screen, preferably as the first displayed item.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.EnsureVisible(System.Int32)">
            <summary>
            Scrolls the control to ensure that chosen item is visible and returns the ListItem vertical offset.
            </summary>
            <param name="ix">Index of the ListItem to display.</param>
            <returns>Offset of the ListItem from the top of the control.</returns>
            <remarks>This method will scroll the control so the row with the desired index
             is diplayed on the screen.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.EnsureVisible(System.Int32,System.Boolean)">
            <summary>
            Scrolls the control to ensure that chosen item is visible and returns the ListItem vertical offset.
            </summary>
            <param name="ix">Index of the ListItem to display.</param>
            <param name="bTop">true, if the item should be positioned as the first item.</param>
            <returns>Offset of the ListItem from the top of the control.</returns>
            <remarks>This method will scroll the control so the item with the desired index
             is diplayed on the screen, preferably as the first displayed item.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.EnsureVisible(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Scrolls the control to ensure that chosen item and cell is visible and returns the ListItem vertical offset.
            </summary>
            <param name="ix">Index of the ListItem to display.</param>
            <param name="cx">Index of the Cell to display.</param>
            <param name="bTop">true, if the row should be positioned as the first item.</param>
            <returns>Offset of the ListItem from the top of the control.</returns>
            <remarks>This method will scroll the control so the item and cell with the desired index
             is diplayed on the screen, preferably as the first displayed item.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.SetScrollPos(System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the scrollbar position so that given item has selected offset from the top.
            </summary>
            <remarks>This method is not robust and you should be carefull about the supplied arguments.</remarks>
            <param name="ix">Index of the item.</param>
            <param name="cx">Index of the cell.</param>
            <param name="offset">Desired offset of the item.</param>
            <returns>Actual offset of the item.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.IsVisible(System.Int32)">
            <summary>
            Determines the visibility of the ListItem at specified index.
            </summary>
            <remarks>If the ListItem at position <paramref name="ix"/> is only partially visible, this method returns false.</remarks>
            <param name="ix">Index of the <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/>.</param>
            <returns>true, if the ListItem at index <paramref name="ix"/> is visible, otherwise false</returns>		
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.IsVisible(Resco.Controls.AdvancedComboBox.ListItem)">
            <summary>
            Determines the visibility of the ListItem.
            </summary>
            <remarks>If the <paramref name="item"/> is only partially visible, this method returns false.</remarks>
            <param name="item"><see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> </param>
            <returns>true, if the <paramref name="item"/> is visible, otherwise false</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.OnClick(System.EventArgs)">
            <summary>
            Handles the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
            <remarks>Fires the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedList.ItemSelect"/>, <see cref="!:LinkClick"/>, <see cref="!:ButtonClick"/> and 
            <see cref="!:CellClick"/> events.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.GetCellAtPoint(System.Drawing.Point)">
            <summary>
            Returns the cell at the specified point.
            </summary>
            <remarks>Use the client coordinates for the point. Returned CellEventArgs are null, if no item is at the point. If no cell is at the point, the cell index returned is -1.</remarks>
            <exception cref="T:System.ArgumentException"> is thrown when specified point is out of the client rectangle.</exception>
            <param name="pt"><see cref="T:System.Drawing.Point"/> coordinates relative to client rectangle.</param>
            <returns><see cref="T:Resco.Controls.AdvancedComboBox.CellEventArgs"/> specifying the cell at the point.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.ActivateLink(System.Int32,System.Int32)">
            <summary>
            Activates the link at the given item and cell indexes.
            </summary>
            <remarks>Does nothing, if the ListItem is not visible, or if the cell at given index is not a <see cref="T:Resco.Controls.AdvancedComboBox.LinkCell"/>.</remarks>
            <param name="itemIndex">Index of the item.</param>
            <param name="cellIndex">Index of the cell.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the OnMouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the OnMouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.OnResize(System.EventArgs)">
            <summary>
            Handles the resize of the control.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.AddTooltipArea(System.Drawing.Rectangle,System.String)">
            <summary>
            Adds the rectangular tooltip area with the given text.
            </summary>
            <remarks>
            <para>Tooltip with given text is displayed in whenever user holds mouse down in the selected area for at least 500 ms.</para>
            <para>Tooltip areas are reset when they are scrolled from view. The best place to update the tooltip areas is from within custom cell's Draw method.</para>
            </remarks>
            <param name="bounds"><see cref="T:System.Drawing.Rectangle"/> within client coordinates.</param>
            <param name="text">Text to display.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.CheckForLink(System.Drawing.Point)">
            <summary>
            Find out if a point is contained within AdvancedComboBox's links.
            </summary>
            <param name="p">Point that will be searched for in AdvancedComboBox's links.</param>
            <returns>True, if p is contained in AdvancedComboBox's links. False otherwise.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.CheckForButton(System.Drawing.Point)">
            <summary>
            Find out if a point is contained within AdvancedComboBox's buttons.
            </summary>
            <param name="p">Point that will be searched for in AdvancedComboBox's buttons.</param>
            <returns>True, if p is contained in AdvancedComboBox's buttons. False otherwise.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.RedrawBackBuffer(System.Boolean)">
            <summary>
            Draws the items, background and border to the backbuffer.
            </summary>
            <param name="isValid">Determine whether the back buffer is valid for the current control (if not, control require full redraw).</param>
            <returns>true, if the full space was drawn, false if background is visible.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.RedrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the background of AdvancedComboBox into back buffer. See remarks section for more details.
            </summary>
            <remarks>
            This method is only called, if at least some part of AdvancedComboBox's background is visible. Method 
            paints the background by drawing a filled rectangle over AdvancedComboBox's background with current
            <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.BackColor"/>.
            </remarks>
            <param name="g">Graphics object to paint to.</param>
            <param name="rect">Rectangle which the method paints to. You should not paint outside this rectangle.         </param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.OnParentChanged(System.EventArgs)">
            <summary>
            Handles the ParentChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
            <remarks>EndUpdate is called</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the PaintBackground event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.ScrollBottomOffset">
            <summary>
            Gets or sets the bottom offset of last item.
            </summary>
            <remarks>Default value is -1.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.SetVScrollBar(System.Int32)">
            <summary>
            Sets parameters of a scroll bar according to the provided height.
            </summary>
            <remarks>
            This method sets vertical scroll bar's properties like: Maximum, Minimum, LarcheChange, SmallChange
            according to the height of the whole document that AdvancedList is displaying. It also creates the
            VScrollBar object, if one does not exist yet.
            </remarks>
            <param name="height">Height of the document that AdvancedComboBox is displaying.</param>
            <returns>Returns true, if redraw is needed. If no scroll bar is necessary (the document is smaller
            than AdvancedComboBox's client area), it returns false.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.OnScroll">
            <summary>
            Fires the scroll event.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.ScrollBarWindowProc(System.IntPtr,Resco.Controls.AdvancedComboBox.Win32Native.WM,System.Int32,System.Int32)">
            <summary>
            Window procedure for our scollbar.
            We have overriden it so that we can resume the mouse capture after the user is done scrolling
            (Mouse Button Up message is received).
            </summary>
            <param name="hwnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.HackScrollbar">
            <summary>
            Get our scrollbar and override its window procedure.
            The first part is tricky because advanced list doesn't expose its scrollbar control,
            so we have to use some Reflection tricks.
            The second part needs some P/Invoke native calls tricks.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.SuspendRedraw">
            <summary>
            Temporarily suspends the redraw for the control.
            </summary>
            <remarks>Control is not redrawn, but the scroll position and height is recalculated.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.ResumeRedraw(System.Boolean)">
            <summary>
            Resumes normal redraw and immediately redraws control.
            </summary>
            <remarks>Redraws the backbuffer and invalidates the control</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.BeginUpdate">
            <summary>
            Signals the object that initialization is starting.
            </summary>
            <remarks>Control is not redrawn and not recalculated.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.EndUpdate">
            <summary>
            Signals the object that initialization is complete.
            </summary>
            <remarks>Control is recalculated and redrawn.</remarks>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_iUpdateCounter">
            <summary>
            When in init, Changed event is not handled and control's backbuffer is not redrawn. 
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_bIsChange">
            <summary>
            When there is no change, backbuffer is not redrawn.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_iNoRedraw">
            <summary>
            When no redraw is set, backbuffer is not redrawn.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_doubleBuffered">
            <summary>
            Back buffer image that AdvancedList paints its contents to. When the drawing is finished, back buffer
            is swapped with the graphics object inside the PaintEventArgs.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_BackColor">
            <summary>
            Back color of AdvancedList
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_BorderPen">
            <summary>
            Pen that is used for drawing.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_vScroll">
            <summary>
            Vertical scroll bar
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_vScrollWidth">
            <summary>
            current width of scrollbar
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_iDocumentHeight">
            <summary>
            Height of all the items when displayed by their CurrentItemTemplate. Changes often.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_iActualItemIndex">
            <summary>
            Index of the item that is topmost in current display.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_iTopmostItemOffset">
            <summary>
            Offset of the topmost item.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_iVScrollPrevValue">
            <summary>
            Previous scroll value.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedList.m_iSelectedCellIndex">
            <summary>
            Index of the selected cell.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.NextSelectableCell">
            <summary>
            Move to the next selectable cell.
            </summary>
            <remarks>
            Changes the actual <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/> property to the next selectable cell. If currently selected cell is
            the last cell in the collection, sets SelectedCell to null which deselects all the cells.
            </remarks>
            <returns>True, if next selectable cell existed, false otherwise.</returns>
            <seealso cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/>
            <seealso cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.PreviousSelectableCell"/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.PreviousSelectableCell">
            <summary>
            Moves to previous selectable cell.
            </summary>
            <remarks>
            Changes the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/> property to the previous selectable cell. 
            If currently selected cell is the first selectable cell in the collection, sets SelectedCell 
            to null which deselects all the cells. If no cell is selected (SelectedCell returns null), 
            function selects the last selectable cell in the collection.
            </remarks>
            <returns>True, if previous selectable cell existed, false otherwise.</returns>
            <seealso cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/>
            <seealso cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.NextSelectableCell"/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedList.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the key down event.
            </summary>
            <param name="e">Arguments of the key event handler</param>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.GridColor">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"/> of the gridlines.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the gridlines.</value>
            <remarks>Gridlines are the separating lines between the diplayed rows with height of 1 pixel.
            Gridlines are displayed only if the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedList.GridLines"/> property is set to true.
            You can use the <see cref="T:Resco.Controls.AdvancedComboBox.SeparatorCell"/> instead of gridlines, or if you want 
            gridlines for some items only.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.BackColor">
            <summary>
            Gets or sets the background <see cref="T:System.Drawing.Color"/> of a control.
            </summary>
            <remarks>This color is used for drawing background.</remarks>
            <value>The background <see cref="T:System.Drawing.Color"/> of a control.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.GradientBackColor">
            <summary>
            Get or sets the gradient back color.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.UseGradient">
            <summary>
            Get or sets whether to use gradient color instead of BackColor.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.SelectedCell">
            <summary>
            Gets or sets the cell that is selected within the currently selected row's ItemTemplate.
            </summary>
            <remarks>
            Setting this property to null means that no cell is selected.
            If you set this property to a cell that is not selectable or that cell does not belong to currently
            selected row's ItemTemplate's CellCollection, an ArgumentException is thrown.
            </remarks>
            <seealso cref="M:Resco.Controls.AdvancedComboBox.AdvancedList.NextSelectableCell"/>
            <seealso cref="M:Resco.Controls.AdvancedComboBox.AdvancedList.PreviousSelectableCell"/>
            <see cref="P:Resco.Controls.AdvancedComboBox.Cell.Selectable"/>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.ScrollbarVisible">
            <summary>
            Gets the scrollbar visibility.
            </summary>
            <value>true if the scrollbar is displayed, false otherwise.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.ShowScrollbar">
            <summary>
            Gets or sets whether the scrollbar should be visible or always hidden.
            </summary>
            <value>true if the scrollbar should be visible, false otherwise</value>
            <remarks>Default value is true, the scrollbar is visible when needed.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Resco.Controls.AdvancedComboBox.AdvancedList.SelectedItem" -->
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.SelectedItemIndex">
            <summary>
            Gets or sets the selected item index.
            </summary>
            <value>The selected item index, or -1 if none is selected.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.TopItemIndex">
            <summary>
            Gets the index of the top item (first partialy displayed).
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.TopItemOffset">
            <summary>
            Gets the offset of the top item (negative value).
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.ContextMenu">
            <summary>
            Gets or sets the shortcut menu associated with the control.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.ContextMenu"/> that represents 
            the shortcut menu associated with the control.</value>
            <remarks><p>Behavior of the context menu is changed due to tooltips.</p>
            <p>It is preferred to use Links instead of context menu as the navigation is faster. 
            If you need to display context sensitive context menu, use <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedList.GetCellAtPoint(System.Drawing.Point)"/> 
            point method to determine where context menu was displayed (see sample bellow).</p></remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.BackBuffer">
            <summary>
            Gets the backbuffer <see cref="T:System.Drawing.Graphics"/> to draw on.
            </summary>
            <value>The <see cref="T:System.Drawing.Graphics"/> to draw on.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedList.GridLinesWidth">
            <summary>
            Gets the current width of the gridlines
            </summary>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedList.ItemSelect">
            <summary>
            Occurs when the item in the control is selected. by click or by 
            setting the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedList.SelectedItem"/> property.
            </summary>
            <remarks>
            <p>Occurs when the item in the control is selected  by click or by 
            setting the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedList.SelectedItem"/> property. ItemSelected is not fired, when using 
            the <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Selected"/> property of the item.</p>
            <p>ItemSelect event has arguments of type <see cref="T:Resco.Controls.AdvancedComboBox.ItemEventArgs"/>.</p></remarks>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedList.Scroll">
            <summary>
            Occurs when the AdvancedList's content is scrolled.
            </summary>
            <value>The event handler receives an argument of type <see cref="T:System.EventArgs"/>.</value>
            <remarks>Use this event to respond on scrolling.</remarks>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.CellSourceType">
            <summary>
            Type of cell source
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.CellSourceType.Constant">
            <summary>
            Cell source is bound to constant data
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.CellSourceType.ColumnIndex">
            <summary>
            Cell source is bound to column index
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.CellSourceType.ColumnName">
            <summary>
            Cell source is bound to column name
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.CellSourceType.DisplayMember">
            <summary>
            Same as Column name, but value is obtained from AdvancedComboBox DisplayMember property
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.LinkCell">
            <summary>
            LinkCell is TextCell for displaying hyperlinks.
            </summary>
            <remarks>
            <p>The LinkCell is a <see cref="T:Resco.Controls.AdvancedComboBox.TextCell"/> capable of diplaying links. 
            Link cells have different default <see cref="P:Resco.Controls.AdvancedComboBox.LinkCell.ForeColor"/> and <see cref="P:Resco.Controls.AdvancedComboBox.LinkCell.TextFont"/>, to
            get the look of the hyperlinks.</p>
            <p>Links can fire the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LinkClick"/> event. During handling this event 
            links change color to <see cref="P:Resco.Controls.AdvancedComboBox.LinkCell.ActiveColor"/>. After activation, link is marked as visited, 
            and displayed with <see cref="P:Resco.Controls.AdvancedComboBox.LinkCell.VisitedColor"/>. The link state is determined from the target 
            property, which can be indenpedent to displayed text, and is determined with the 
            <see cref="P:Resco.Controls.AdvancedComboBox.LinkCell.UrlFormatString"/> property.</p>
            <p>You can get different behavior with combination of using the <see cref="P:Resco.Controls.AdvancedComboBox.Cell.CellSource"/>,
            <see cref="P:Resco.Controls.AdvancedComboBox.TextCell.FormatString"/> and <see cref="P:Resco.Controls.AdvancedComboBox.LinkCell.UrlFormatString"/> for the same data.
            <list type="table">
            <listheader><term>Scenario</term><description>How to get it</description></listheader>
            <item><term>Constant text / constant link, Target == Text</term>
            <description>You can use <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.Constant"/> source of data, with FormatString and UrlFormatString both {0}.</description></item>
            <item><term>Any text / constant link, Target != Text</term>
            <description>You can use desired FormatString in conjuction with the source of data, and use constant UrlFormatString set to target (without {0} parameter), e.g. <c>UrlFormatString = "OrderForm"</c>, when displaying product name as a text.</description></item>
            <item><term>Constant text / various link, Target != Text</term>
            <description>You can use desired UrlFormatString in conjuction with the source of data, and use constant FormatString set to displayed text (without {0} parameter), e.g. <c>FormatString = "Buy Now!"</c>, and target is set to product id).</description></item>
            <item><term>Various text / various link, Target and Text bound to same source</term>
            <description>You can use desired UrlFormatString and FormatString in conjuction with the source of data, e.g. <c>FormatString="{0}"</c> and <c>UrlFormatString = "mailto://{0}"</c> as , when displaying e-mails.</description></item>
            </list></p>
            <p>The target of the link denotes the state of it, so when more combinations of LinkCells with
            data will have the same target, all will look visited after clicking on any of them.</p>
            </remarks>  
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.TextCell">
            <summary>
            TextCell is a Cell used to display text.
            </summary>
            <remarks>
            <p>The TextCell is a <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> capable of diplaying formated and aligned text. 
            Text can have defined <see cref="P:Resco.Controls.AdvancedComboBox.Cell.ForeColor"/> and <see cref="P:Resco.Controls.AdvancedComboBox.TextCell.TextFont"/>.</p>
            <p><see cref="P:Resco.Controls.AdvancedComboBox.TextCell.FormatString"/> is used to display the data in formated manner. 
            Setting the <see cref="P:Resco.Controls.AdvancedComboBox.TextCell.Alignment"/> property you can control the placement of the text.
            If the text doesn't fit to <see cref="P:Resco.Controls.AdvancedComboBox.Cell.Bounds"/> it is cropped, and can be displayed using 
            the tooltip.</p>
            </remarks>  
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TextCell.#ctor">
            <summary>
            Empty constructor. Sets default values.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TextCell.#ctor(Resco.Controls.AdvancedComboBox.TextCell)">
            <summary>
            Copy constructor.
            </summary>
            <param name="tc">Text cell to copy the parameters from.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TextCell.Clone">
            <summary>
            Clones the TextCell.
            </summary>
            <remarks>The Cell cannot be used in more then one ItemTemplate. 
            Use this method to create the copy of the cell in another template.</remarks>
            <returns>A new TextCell with the same properties as the current TextCell.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TextCell.ShouldSerializeAlignment">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.TextCell.Alignment"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TextCell.GetText(System.Object)">
            <summary>
            Gets the text to display based on given data.
            </summary>
            <remarks>Performs the formatting of data in text cell.</remarks>
            <param name="data">Data to convert to text cell.</param>
            <returns>Text that is to be displayed in the cell.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TextCell.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Object)">
            <summary>
            Draws the contents of the cell.
            </summary>
            <param name="gr">drawing surface</param>
            <param name="drawbounds">bounds of cell</param>
            <param name="data">data to display</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TextCell.DrawToolTip(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Rectangle,System.String)">
            <summary>
            Draws the tooltip for the specified cell.
            </summary>
            <param name="gr"><see cref="T:System.Drawing.Graphics"/> to draw to.</param>
            <param name="foreBrush"><see cref="T:System.Drawing.Brush"/> for drawing the tooltip, its default Color is ForeColor.</param>
            <param name="text">Text of the tooltip.</param>
            <param name="layoutRectangle"></param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TextCell.GetAutoHeight(Resco.Controls.AdvancedComboBox.ListItem,System.Int32,Resco.Controls.AdvancedComboBox.ItemSpecificCellProperties)">
            <summary>
            Computes the height of the cell when the cell is AutoHeight cell.
            </summary>
            <param name="item">Item with data.</param>
            <param name="index">Index of the cell in cell collection.</param>
            <returns>Display height of the cell based.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TextCell.DrawTextLine(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw the line of text at given position.
            </summary>
            <remarks>Is implemented by: <c>gr.DrawString( line, font, brush, x, y );</c></remarks>
            <param name="gr">Graphics to use.</param>
            <param name="line">Text of line.</param>
            <param name="font">Font to use.</param>
            <param name="brush">Brush to use.</param>
            <param name="x">Top coordinate of line.</param>
            <param name="y">Left coordinate of line.</param>
            <param name="width">Width of line.</param>
            <param name="height">Height of line.</param>
            <param name="textIndex">Index of the line relative to whole text.</param>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TextCell.TextFont">
            <summary>
            Gets or sets the font for displaying the text.
            </summary>
            <value>The <see cref="T:System.Drawing.Font"/> for displaying the text.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TextCell.Alignment">
            <summary>
            Gets or sets the Alignment of a text diplayed in the TextCell.
            </summary>
            <value>The <see cref="!:Resco.Controls.Alignment"/> of a text diplayed in the TextCell.</value>
            <remarks>If the text doesn't fit to cell it is cropped, and can be displayed using tooltips.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TextCell.FormatString">
            <summary>
            Gets or sets the format string used to convert data to text to display.
            </summary>
            <value>The format string used to convert data to text to display.</value>
            <remarks>The provided string is used as an argument to String.<see cref="M:System.String.Format(System.String,System.Object)"/> 
            function, to convert data provided as a second argument. The data are represented
            by {0} in the format string.</remarks>
            <seealso cref="M:System.String.Format(System.String,System.Object)"/>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TextCell.SelectedForeColor">
            <summary>
            Gets or sets the selected foreground color of a TextCell.
            </summary>
            <value>The selected foreground <see cref="T:System.Drawing.Color"/> of a TextCell.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TextCell.SelectedBackColor">
            <summary>
            Gets or sets the selected background color of a TextCell.
            </summary>
            <value>The selected background <see cref="T:System.Drawing.Color"/> of a TextCell.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TextCell.SelectedText">
            <summary>
            Gets or sets the selected text of a TextCell.
            </summary>
            <value>The selected text of a TextCell.</value>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.LinkCell.#ctor">
            <summary>
            Empty constructor, sets default values.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.LinkCell.#ctor(Resco.Controls.AdvancedComboBox.LinkCell)">
            <summary>
            Copy constructor.
            </summary>
            <param name="cell">The Separator cell to create copy from.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.LinkCell.Clone">
            <summary>
            Clones the LinkCell.
            </summary>
            <remarks>The Cell cannot be used in more then one ItemTemplate. 
            Use this method to create the copy of the cell in another template.</remarks>
            <returns>A new LinkCell with the same properties as the current LinkCell.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.LinkCell.GetLink(System.Object)">
            <summary>
            Gets the link target for given data.
            </summary>
            <param name="data">Bound data.</param>
            <returns>Link target.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.LinkCell.DrawActiveLink(System.Drawing.Graphics,Resco.Controls.AdvancedComboBox.LinkEventArgs,System.Int32)">
            <summary>
            Draws the active link
            </summary>
            <param name="gr">graphics to draw</param>
            <param name="lea">parameters of link click</param>
            <param name="w">width of item</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.LinkCell.DrawTextLine(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws line of the text on given graphics plane.
            </summary>
            <remarks>This method is called for each line calculated in DrawAlignedText.</remarks>
            <param name="gr">Graphics to draw on.</param>
            <param name="line">Text of the line.</param>
            <param name="font">Font to use.</param>
            <param name="brush">Brush to use.</param>
            <param name="x">Left coordinate of line bounding rectangle.</param>
            <param name="y">Top coordinate of line bounding rectangle.</param>
            <param name="width">Width of line bounding rectangle.</param>
            <param name="height">Height coordinate of line bounding rectangle.</param>
            <param name="textIndex">Index of the original text where line starts.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.LinkCell.GetColor(Resco.Controls.AdvancedComboBox.ColorCategory)">
            <summary>
            Gets the <see cref="T:System.Drawing.Color"/> of selected <see cref="T:Resco.Controls.AdvancedComboBox.ColorCategory"/>, resolves transparency issues.
            </summary>
            <remarks>This override selects the appropriate color for the link by the state of the link.</remarks>
            <param name="c"><see cref="T:Resco.Controls.AdvancedComboBox.ColorCategory"/> that denotes the <see cref="T:System.Drawing.Color"/>.</param>
            <returns>The actual <see cref="T:System.Drawing.Color"/> of selected <see cref="T:Resco.Controls.AdvancedComboBox.ColorCategory"/>.</returns>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.LinkCell.ForeColor">
            <summary>
            Gets or sets the ForeColor for displaying the link. 
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the link.</value>
            <remarks>Default value is <see cref="P:System.Drawing.Color.Blue"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.LinkCell.ActiveColor">
            <summary>
            Gets or sets the color of the active link.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the active link.</value>
            <remarks>Default value is <see cref="P:System.Drawing.Color.Yellow"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.LinkCell.VisitedColor">
            <summary>
            Gets or sets the color of the visited link.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the visited link.</value>
            <remarks>Default value is <see cref="P:System.Drawing.Color.Gray"/>.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.LinkCell.TextFont">
            <summary>
            Gets or sets the font for displaying the text.
            </summary>
            <value>The <see cref="T:System.Drawing.Font"/> for displaying the text.</value>
            <remarks>Link cells font is underlined by default.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.LinkCell.UrlFormatString">
            <summary>
            Gets or sets the format string used to convert data to link target.
            </summary>
            <value>The format string used to convert data to <see cref="F:Resco.Controls.AdvancedComboBox.LinkEventArgs.Target"/> of the 
            <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LinkClick"/> event.</value>
            <remarks>The provided string is used as an argument to String.<see cref="M:System.String.Format(System.String,System.Object)"/>
            function, to convert data provided as a second argument. The data are represented
            by {0} in the format string.</remarks>
            <seealso cref="M:System.String.Format(System.String,System.Object)"/>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.Alignment">
            <summary>
            Defines the alignment of text, image or other content.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Alignment.TopLeft">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Alignment.MiddleLeft">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Alignment.BottomLeft">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Alignment.TopCenter">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Alignment.MiddleCenter">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Alignment.BottomCenter">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Alignment.TopRight">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Alignment.MiddleRight">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Alignment.BottomRight">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ColorCategory">
            <summary>
            Category of color information.
            </summary>
            <remarks>
            ColorCategory is used as a parameter for the <see cref="M:Resco.Controls.AdvancedComboBox.Cell.GetColor(Resco.Controls.AdvancedComboBox.ColorCategory)"/> method.
            Returned color will belong to demanded category, e.g. for the <see cref="T:Resco.Controls.AdvancedComboBox.LinkCell"/> color
            for the <see cref="F:Resco.Controls.AdvancedComboBox.ColorCategory.Foreground"/> is dependent on the link state.
            </remarks>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ColorCategory.Background">
            <summary>
            Denotes the background color.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ColorCategory.Foreground">
            <summary>
            Denotes the foreground color.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ColorCategory.BorderFlat">
            <summary>
            Denotes the flat border color, default is <c>SystemColors.ControlDark</c>.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ColorCategory.BorderHighlight">
            <summary>
            Denotes the highlight color of border, default is <c>SystemColors.ControlDarkDark</c>.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ColorCategory.BorderShadow">
            <summary>
            Denotes the shadow color of border, default is <c>SystemColors.ControlLightLight</c>.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.BorderType">
            <summary>
            Border of cell.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.BorderType.None">
            <summary>
            Without border.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.BorderType.Flat">
            <summary>
            Light border, flat looking, with color from category <see cref="F:Resco.Controls.AdvancedComboBox.ColorCategory.BorderFlat"/>.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.BorderType.Inset">
            <summary>
            Inset border, for pushed in cells. Top and left has  color from category 
            <see cref="F:Resco.Controls.AdvancedComboBox.ColorCategory.BorderShadow"/>, bottom and right from category 
            <see cref="F:Resco.Controls.AdvancedComboBox.ColorCategory.BorderHighlight"/>. 
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.BorderType.Raised">
            <summary>
            Raised border, for pulled out cells. Top and left has  color from category 
            <see cref="F:Resco.Controls.AdvancedComboBox.ColorCategory.BorderHighlight"/>, bottom and right from category 
            <see cref="F:Resco.Controls.AdvancedComboBox.ColorCategory.BorderShadow"/>. 
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.SeparatorType">
            <summary>
            Type of separator in separator cell.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.SeparatorType.Empty">
            <summary>
            Empty separator without line.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.SeparatorType.Horizontal">
            <summary>
            Separator with vertical line, separates cells horizontally.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.SeparatorType.Vertical">
            <summary>
            Separator with horizontal line, separates cells vertically.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ItemAddingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ItemAdding"/> event.
            </summary>
            <param name="sender">Object that raised the event i.e. AdvancedComboBox.</param>
            <param name="e">Arguments of this event.</param>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ItemAddingEventArgs">
            <summary>
            Represents arguments for <see cref="!:AdvancedComboBox.ItemAddingEventHandler"/> delegate.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemAddingEventArgs.ListItem">
            <summary>
            Sets a ListItem that will be added into AdvancedComboBox's ItemColection.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemAddingEventArgs.ItemIndex">
            <summary>
            Gets an index of a item that is about to be added.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.DataLoadedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DataLoaded"/> event.
            </summary>
            <param name="sender">Object that raised the event i.e. AdvancedComboBox.</param>
            <param name="e">Arguments of this event.</param>
            <seealso cref="T:Resco.Controls.AdvancedComboBox.DataLoadedEventArgs"/>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.DataLoadedEventArgs">
            <summary>
            Contains arguments for <see cref="T:Resco.Controls.AdvancedComboBox.DataLoadedEventHandler"/> delegate.
            </summary>
            <remarks>
            When delayed load is complete, LoadComplete property is set to true.
            </remarks>
            <seealso cref="!:AdvancedComboBox.Cell.DataLoaded"/>
            <seealso cref="!:AdvancedComboBox.DataLoadedEventHandler"/>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.CellEnteredMainEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CellEntered"/> event.
            </summary>
            <param name="sender">Object that raised the event i.e. AdvancedComboBox.</param>
            <param name="e">Arguments of this event.</param>
            <seealso cref="T:Resco.Controls.AdvancedComboBox.CellEnteredMainEventArgs"/>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.CellEnteredMainEventArgs">
            <summary>
            Represents arguments for <see cref="T:Resco.Controls.AdvancedComboBox.CellEnteredMainEventHandler"/> delegate.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellEnteredMainEventArgs.#ctor(Resco.Controls.AdvancedComboBox.Cell,System.Int32,Resco.Controls.AdvancedComboBox.ListItem)">
            <summary>
            Constructs a CellEnteredMainEventArgs object.
            </summary>
            <param name="cell">Reference to the cell that was entered.</param>
            <param name="iCellIndex">Index of the cell in its 
            <param name="r">ListItem that was clicked.</param>
            <see cref="!:AdvancedComboBox.ItemTemplate.CellCollection"/></param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellEnteredMainEventArgs.#ctor">
            <summary>
            Constructs an empty CellEnteredMainEventArgs object.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CellEnteredMainEventArgs.Cell">
            <summary>
            Gets or sets the reference to the cell that was entered.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CellEnteredMainEventArgs.CellIndex">
            <summary>
            Gets or sets the index of the cell in its <see cref="!:AdvancedComboBox.ItemTemplate.CellCollection"/>.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CellEnteredMainEventArgs.ListItem">
            <summary>
            Gets or sets the item that was used to display the data from.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.CellEnteredEventHandler">
            <summary>
            Represents the method that will handle the <see cref="!:AdvancedComboBox.Cell.CellEntered"/> event.
            </summary>
            <param name="sender">Object that raised the event i.e. AdvancedComboBox.</param>
            <param name="e">Arguments of this event.</param>
            <seealso cref="!:AdvancedComboBox.CellEnteredEventArgs"/>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.CellEnteredEventArgs">
            <summary>
            Contains arguments for <see cref="T:Resco.Controls.AdvancedComboBox.CellEnteredEventHandler"/> delegate.
            </summary>
            <seealso cref="!:AdvancedComboBox.Cell.CellEntered"/>
            <seealso cref="!:AdvancedComboBox.CellEnteredEventHandler"/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellEnteredEventArgs.#ctor(Resco.Controls.AdvancedComboBox.Cell,Resco.Controls.AdvancedComboBox.ListItem,System.Object)">
            <summary>
            Constructs the CellEnteredEventArgs object.
            </summary>
            <param name="c">Cell that was entered.</param>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CellEnteredEventArgs.Cell">
            <summary>
            Gets the cell that was entered.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CellEnteredEventArgs.ListItem">
            <summary>
            Gets the item which displayed data was taken from.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CellEnteredEventArgs.Data">
            <summary>
            Gets the data displayed by the cell.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ItemEnteredEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ItemEntered"/> event.
            </summary>
            <param name="sender">Object that raised the event i.e. AdvancedComboBox.</param>
            <param name="e">Arguments of this event.</param>
            <seealso cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ItemEntered"/>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ItemEnteredEventArgs">
            <summary>
            ItemEnteredEventArgs class contains the arguments for <see cref="!:AdvancedComboBox.ItemEnteredEventHandler"/>
            delegate.
            </summary>
            <seealso cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ItemEntered"/>
            <seealso cref="!:AdvancedComboBox.ItemEnteredEventHandler"/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemEnteredEventArgs.#ctor(Resco.Controls.AdvancedComboBox.ListItem,System.Int32)">
            <summary>
            Constructs the ItemEnteredEventArgs object.
            </summary>
            <param name="r">Reference of the item that was entered.</param>
            <param name="iItemIndex">Index of the entered item in AdvancedComboBox's item collection.</param>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemEnteredEventArgs.ListItem">
            <summary>
            Gets the reference of the entered item.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ItemEnteredEventArgs.ItemIndex">
            <summary>
            Gets the index of the entered item.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ItemEventHandler">
            <summary>
            Represents the method that will handle the item click event.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ItemEventArgs">
            <summary>
            ItemEventArgs class contains the arguments of ItemEventHandler delegate.
            </summary>
            <remarks>
            ItemEventArgs are arguments for the <see cref="!:AdvancedComboBox.ItemSelect"/> event.
            The data provided to the handler consist of the <see cref="!:DataItem"/>, that was 
            affected by the event, <see cref="F:Resco.Controls.AdvancedComboBox.ItemEventArgs.ItemIndex"/> of this item and the <see cref="F:Resco.Controls.AdvancedComboBox.ItemEventArgs.Offset"/>
            of the item from the top of the screen.
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ItemEventArgs.#ctor(Resco.Controls.AdvancedComboBox.ListItem,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ItemEventArgs class.
            </summary>
            <param name="r">The item that was clicked.</param>
            <param name="i">An index of the item in item collection.</param>
            <param name="yoff">Current vertical offset of the item in grid.</param>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ItemEventArgs.ListItem">
            <summary>
            The <see cref="F:Resco.Controls.AdvancedComboBox.ItemEventArgs.ListItem"/> that was clicked.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ItemEventArgs.ItemIndex">
            <summary>
            An index of the item in the <see cref="T:Resco.Controls.AdvancedComboBox.ItemCollection"/>.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ItemEventArgs.Offset">
            <summary>
            Current vertical offset of the item in grid.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.CellEventHandler">
            <summary>
            Represents the method that will handle the cell click event.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.CellEventArgs">
            <summary>
            CellEventArgs class contains the arguments of CellEventHandler delegate.
            </summary>
            <remarks>
            CellEventArgs are arguments for the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CellClick"/> .
            They extend the <see cref="T:Resco.Controls.AdvancedComboBox.ItemEventArgs"/>.
            The data provided to the handler are extended with the affected <see cref="F:Resco.Controls.AdvancedComboBox.CellEventArgs.Cell"/> and 
            its <see cref="F:Resco.Controls.AdvancedComboBox.CellEventArgs.CellIndex"/>, and the actual displayed <see cref="F:Resco.Controls.AdvancedComboBox.CellEventArgs.CellData"/>.
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellEventArgs.#ctor(Resco.Controls.AdvancedComboBox.ListItem,Resco.Controls.AdvancedComboBox.Cell,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the CellEventArgs class.
            </summary>
            <param name="r">The item that was clicked.</param>
            <param name="c">The cell that was clicked.</param>
            <param name="ii">An index of the item in item collection.</param>
            <param name="ci">An index of the cell in item template.</param>
            <param name="yoff">Current vertical offset of the item in grid.</param>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.CellEventArgs.Cell">
            <summary>
            The cell that was clicked, or null if no cell at point.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.CellEventArgs.CellIndex">
            <summary>
            An index of the cell in item template, or -1 if no cell at point.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.CellEventArgs.CellData">
            <summary>
            The current displayed data.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.LinkEventHandler">
            <summary>
            Represents the method that will handle the link click event.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.LinkEventArgs">
            <summary>
            LinkEventArgs class contains the arguments of LinkEventHandler delegate.
            </summary>
            <remarks>
            LinkEventArgs are arguments for the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LinkClick"/>  event. 
            They extend the <see cref="T:Resco.Controls.AdvancedComboBox.CellEventArgs"/>.
            The data provided to the handler are extended with the <see cref="F:Resco.Controls.AdvancedComboBox.LinkEventArgs.Target"/> of the link.
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.LinkEventArgs.#ctor(Resco.Controls.AdvancedComboBox.ListItem,Resco.Controls.AdvancedComboBox.Cell,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the CellEventArgs class.
            </summary>
            <param name="item">The item that was clicked.</param>
            <param name="c">The cell that was clicked.</param>
            <param name="ri">An index of the item in item collection.</param>
            <param name="ci">An index of the cell in item template.</param>
            <param name="yoff">Current vertical offset of the item in grid.</param>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.LinkEventArgs.Target">
            <summary>
            The target of the link, e.g. URL.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ButtonEventHandler">
            <summary>
            Represents the method that will handle the button click event.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ValidateDataEventHandler">
            <summary>
            Represents the method that will handle the validate data event.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ValidateDataArgs">
            <summary>
            ValidataDataArgs class contains the arguments of <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ValidateData"/> event.
            </summary>
            <remarks>The data provided to handler of the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ValidateData"/> event were loaded
            from the <see cref="T:Resco.Controls.AdvancedComboBox.IDataConnector"/> or <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DataSource"/> and can be changed.
            The <see cref="!:ValidateDataArgs.DataItem"/> contains the values and template indices
            and can be changed before it is displayed. The <see cref="F:Resco.Controls.AdvancedComboBox.ValidateDataArgs.InsertIndex"/>
            contains the position, to which the <see cref="!:DataItem"/> will be inserted. If
            <see cref="F:Resco.Controls.AdvancedComboBox.ValidateDataArgs.Skip"/> is set to true, the <see cref="!:DataItem"/> will not
            be inserted.</remarks>
            <seealso cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ValidateData"/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ValidateDataArgs.#ctor(Resco.Controls.AdvancedComboBox.ListItem,System.Int32)">
            <summary>
            Initializes a new instance of the ValidateDataArgs class.
            </summary>
            <param name="r">The item to be inserted.</param>
            <param name="insertIndex">Index where the item is going to be inserted.</param>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ValidateDataArgs.ListItem">
            <summary>
            The item to be inserted.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ValidateDataArgs.Skip">
            <summary>
            Indicate whether to skip the item.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ValidateDataArgs.InsertIndex">
            <summary>
            Index where the item is going to be inserted.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.CustomizeCellEventHandler">
            <summary>
            Represents the method that will handle the validate data event.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.CustomizeCellEventArgs">
            <summary>
            Class containing arguments for <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CustomizeCell"/> event.
            </summary>
            <remarks>Use the <see cref="P:Resco.Controls.AdvancedComboBox.CustomizeCellEventArgs.Cell"/> or <i>Data</i> property to customize the cell to be diplayed.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CustomizeCellEventArgs.Cell">
            <summary>
            Gets the cell that is going to be displayed by the AdvancedComboBox.
            </summary>
            <remarks>
            <p>You can change the appearance or data of the cell you want to customize.</p>
            <p>For more advanced display, you can derive own cell type from <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> 
            overriding the <see cref="M:Resco.Controls.AdvancedComboBox.Cell.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Object)"/> method.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CustomizeCellEventArgs.Data">
            <summary>
            Gets or sets cell data to by displayed.
            </summary>
            <value>Data to be displayed.</value>
            <remarks>Use <i>Data</i> property instead of <see cref="!:Cell.CurrentData"/>, because <i>CurrentData</i>
            has not been initialized during <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CustomizeCell"/> event.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CustomizeCellEventArgs.DataItem">
            <summary>
            Gets the data item for the current cell.
            </summary>
            <value>Data item of the current cell.</value>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ItemSpecificCellProperties">
            <summary>
            This classs is used to determine values that differ from default RowTemplate settings for specific cell
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.TemplateSet">
            <summary>
            TemplateSet is the collection of <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/>s.
            </summary>
            <remarks>
            <p>TemplateSet is derived from <see cref="T:System.Collections.CollectionBase"/> and supports <see cref="M:Resco.Controls.AdvancedComboBox.TemplateSet.Add(Resco.Controls.AdvancedComboBox.ItemTemplate)"/>, 
            <see cref="M:Resco.Controls.AdvancedComboBox.TemplateSet.Insert(System.Int32,Resco.Controls.AdvancedComboBox.ItemTemplate)"/> and <see cref="M:Resco.Controls.AdvancedComboBox.TemplateSet.Remove(Resco.Controls.AdvancedComboBox.ItemTemplate)"/> methods.
            The <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/> can only be in one TemplateSet at a time. Whether the ItemTemplate 
            is in collection can be determined by the <see cref="M:Resco.Controls.AdvancedComboBox.TemplateSet.Contains(Resco.Controls.AdvancedComboBox.ItemTemplate)"/> method.
            The index of the template can be determined by the <see cref="M:Resco.Controls.AdvancedComboBox.TemplateSet.IndexOf(Resco.Controls.AdvancedComboBox.ItemTemplate)"/> method. 
            Template set can be accessed through the indexers by the item template index or name. 
            </p>
            <p>You can have more prepared template sets and use them through the 
            <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> property of the <see cref="T:Resco.Controls.AdvancedComboBox.AdvancedComboBox"/>.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.Add(Resco.Controls.AdvancedComboBox.ItemTemplate)">
            <summary>
            Adds a ItemTemplate to the end of the TemplateSet.
            </summary>
            <param name="value">The <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/> to be added to the end of the TemplateSet.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.IndexOf(Resco.Controls.AdvancedComboBox.ItemTemplate)">
            <summary>
            Searches for the specified ItemTemplate and returns the zero-based index of the first occurrence within the entire TemplateSet.
            </summary>
            <param name="value">The ItemTemplate to locate in the TemplateSet.</param>
            <returns>The zero-based index of the first occurrence of value within the entire TemplateSet, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.Insert(System.Int32,Resco.Controls.AdvancedComboBox.ItemTemplate)">
            <summary>
            Inserts an element into the TemplateSet at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The ItemTemplate to insert.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.Remove(Resco.Controls.AdvancedComboBox.ItemTemplate)">
            <summary>
            Removes the first occurrence of a specific ItemTemplate from the TemplateSet.
            </summary>
            <param name="value">The ItemTemplate to remove from the TemplateSet.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.Contains(Resco.Controls.AdvancedComboBox.ItemTemplate)">
            <summary>
            Determines whether the TemplateSet contains a specific element.
            </summary>
            <param name="value">The Object to locate in the TemplateSet.</param>
            <returns>true if the TemplateSet contains the specified value; otherwise, false.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the TemplateSet.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the TemplateSet.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the TemplateSet.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the TemplateSet.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a value in the TemplateSet.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.#ctor">
            <summary>
            Initializes a new instance of the TemplateSet class.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TemplateSet.Clone">
            <summary>
            Creates a copy of the current TemplateSet.
            </summary>
            <returns>The copy of the current TemplateSet.</returns>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TemplateSet.Parent">
            <summary>
            Parent list of the template set.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TemplateSet.Item(System.Int32)">
            <summary>
            Gets or sets the item template for the given template index.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TemplateSet.Item(System.String)">
            <summary>
            Gets the first item template with the given name.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.BoundItem">
            <summary>
            The BoundItem is a wrapper derived from <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> that is used for databinding. You can either wrap <see cref="T:System.Data.DataRow"/> or any object using <see cref="T:Resco.Controls.AdvancedComboBox.PropertyMapping"/>.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.ListItem">
            <summary>
            Contains data and template binding for the item displayed in the <see cref="T:Resco.Controls.AdvancedComboBox.AdvancedComboBox"/>.
            </summary>
            <remarks>
            <p>There are more ways of creating the <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/>, but after the item was created, the 
            number of fields remains constant. Underlying type of the ListItem is just an array of objects. 
            The number of fields is given by the property <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.FieldCount"/>.</p>
            <p>The field <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/> is accessible through property <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.FieldNames"/>.
            The fields can be mapped to names and accessed with the string indexer <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Item(System.String)"/>,
             or unnamed using the <see cref="P:Resco.Controls.AdvancedComboBox.Mapping.Empty"/> mapping, accessing the data with integer indexer 
             <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Item(System.Int32)"/>. When mapping is not empty, it must 
             have the same <see cref="P:Resco.Controls.AdvancedComboBox.Mapping.FieldCount"/> as the item.</p>
             <p>Data can be set with the constructor or indexers, or with the method <see cref="M:Resco.Controls.AdvancedComboBox.ListItem.SetData(System.Collections.ICollection)"/> 
             the data can be read from <see cref="T:System.Collections.ICollection"/> or <see cref="T:System.Data.IDataRecord"/> (data reader).
             When having string data, the property <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.StringData"/> can be used 
             (used by the designer). To get the data, <see cref="M:Resco.Controls.AdvancedComboBox.ListItem.GetData(System.Object[])"/> method can be used.</p>
             <p><see cref="P:Resco.Controls.AdvancedComboBox.ListItem.TemplateIndex"/> and <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.SelectedTemplateIndex"/> are used to bind the
             item with the templates from <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> in the template set. 
             Which template is used
             is dependent on whether the item is <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Selected"/> or not.</p>
             <note type="inheritinfo">Non-public properties and methods can be a subject of change during
             further developement.</note>
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This constructor is used for the derived classes.
            </summary>
            <remarks>The constructor sets mapping to null and creates no data. Most data manipulation methods doesn't work (throws exception) after using this constructor. You must override the following members:
            <list type="bullet">
            <item><description><see cref="M:Resco.Controls.AdvancedComboBox.ListItem.SetData(System.Collections.ICollection)"/></description></item>
            <item><description><see cref="M:Resco.Controls.AdvancedComboBox.ListItem.GetData(System.Object[])"/></description></item>
            <item><description><see cref="P:Resco.Controls.AdvancedComboBox.ListItem.FieldCount"/></description></item>
            <item><description><see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Item(System.Int32)"/></description></item>
            <item><description><see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Item(System.String)"/></description></item>
            </list>
            <p>The <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.StringData"/> property is not get/set in derived items using this constructor.</p></remarks>
            <param name="ti">The template index.</param>
            <param name="sti">The selected template index.</param>
            <param name="ati">The alternate template index.</param>
            <param name="tbti">The textbox template index.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.#ctor">
            <summary>
            Creates new empty item.
            </summary>
            <remarks>This default constructor is used only by the designer, or to create empty data.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.ICollection,Resco.Controls.AdvancedComboBox.Mapping)">
            <summary>
            Creates new item, with chosen template indices and mapped data.
            </summary>
            <param name="ti">Index to <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> template set.</param>
            <param name="sti">Index to <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> template set
             to use when the row is <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Selected"/>.</param>
            <param name="dataList"><see cref="T:System.Collections.ICollection"/> of field values.</param>
            <param name="fieldNames">The <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/> of the field names, or 
            <see cref="P:Resco.Controls.AdvancedComboBox.Mapping.Empty"/>.</param>
            <remarks>Use this constructor when you already have the data.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.ICollection)">
            <summary>
            Creates new listitem, with chosen template indices and data without field names.
            </summary>
            <param name="ti">Index to the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> template set.
            </param>
            <param name="sti">Index to the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> 
            template set to use when the row is <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Selected"/>.</param>
            <param name="dataList"><see cref="T:System.Collections.ICollection"/> of field values.</param>
            <remarks>Uses the <see cref="!:ListItem(int, int, ICollection, Mapping)"/> with 
            <paramref name="fieldNames"/> set to <see cref="P:Resco.Controls.AdvancedComboBox.Mapping.Empty"/>.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.ICollection)">
            <summary>
            Creates new listitem, with chosen template indices and data without field names.
            </summary>
            <param name="ti">Index to the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> template set.
            </param>
            <param name="sti">Index to the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> 
            template set to use when the row is <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Selected"/>.</param>
            <param name="tag">Tag for the ListItem</param>
            <param name="dataList"><see cref="T:System.Collections.ICollection"/> of field values.</param>
            <remarks>Uses the <see cref="!:ListItem(int, int, ICollection, Mapping)"/> with 
            <paramref name="fieldNames"/> set to <see cref="P:Resco.Controls.AdvancedComboBox.Mapping.Empty"/>.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Resco.Controls.AdvancedComboBox.Mapping)">
            <summary>
            Creates new ListItem, with chosen template indices and field names, without data.
            </summary>
            <param name="ti">Index to the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> template set.
            </param>
            <param name="sti">Index to the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> 
            template set to use when the item is <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Selected"/>.</param>
            <param name="fieldNames">The <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/> of the field names, or 
            <see cref="P:Resco.Controls.AdvancedComboBox.Mapping.Empty"/>.</param>
            <remarks>Use this constructor when mapping is known, and data will be set afterwards,
            e. g. from the data reader.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new item, with chosen template indices, without data  and field names.
            </summary>
            <param name="ti">Index to the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> template set.
            </param>
            <param name="sti">Index to the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates"/> 
            template set to use when the item is <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Selected"/>.</param>
            <param name="fieldCount">Number of fields to create.</param>
            <remarks>Use this constructor when fields are not named (using empty mapping), 
            and data will be set afterwards, e. g. from the collection.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.#ctor(System.Int32)">
            <summary>
            Create empty item, with selected number of fields without names.
            </summary>
            <param name="fieldCount">Number of fields to create.</param>
            <remarks>Calls the <see cref="!:ListItem(int, int, int)"/> overload with the default template
            indices set to 0.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.#ctor(Resco.Controls.AdvancedComboBox.Mapping)">
            <summary>
            Create empty item, with selected named fields.
            </summary>
            <param name="fieldNames">The <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/> of the field names, or 
            <see cref="P:Resco.Controls.AdvancedComboBox.Mapping.Empty"/>.</param>
            <remarks>Calls the <see cref="!:ListItem(int, int, Mapping)"/> overload with the default template
            indices set to 0.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.#ctor(Resco.Controls.AdvancedComboBox.ListItem)">
            <summary>
            Copy constructor.
            </summary>
            <remarks>Creates the item, that is the deep copy of the given item.</remarks>
            <param name="toCopy"><see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> to be copied.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.Update">
            <summary>
            Update changes made to StringData.
            </summary>
            <remarks>When you change StringData, you can notify ListItem to update using this function.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.SetData(System.Collections.ICollection)">
            <summary>
            Copies the data from the collection to the item.
            </summary>
            <remarks>The old data are overwritten. The count of new data can be different then the field count of item.</remarks>
            <param name="data">Collection of data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.GetData(System.Object[])">
            <summary>
            Make the copy of internal data to object array.
            </summary>
            <param name="data"><see cref="T:System.Array"/> of objects, length of the array must be equal 
            to field count of the item.</param>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="data"/> has different
            <see cref="P:System.Array.Length"/> as the <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.FieldCount"/> of the item.</exception>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.SetData(System.Data.IDataRecord)">
            <summary>
            Copies the data from data reader or other data records.
            </summary>
            <param name="reader">Data reader or other implementation of <see cref="T:System.Data.IDataRecord"/>.</param>
            <remarks>Old data are overwritten. The field count is changed to the <see cref="P:System.Data.IDataRecord.FieldCount"/> of the <paramref name="reader"/>. Data mapping is ignored when loading 
            the data. It is recommended to (re)create the mapping from the <paramref name="reader"/></remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.ToString">
            <summary>
            Returns a String that represents the current ListItem.
            </summary>
            <returns>A String that represents the current ListItem.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.GetTemplate(Resco.Controls.AdvancedComboBox.TemplateSet)">
            <summary>
            Gets the current <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/> for this item from chosen <see cref="T:Resco.Controls.AdvancedComboBox.TemplateSet"/>.
            </summary>
            <param name="ts">The <see cref="T:Resco.Controls.AdvancedComboBox.TemplateSet"/> to get the template from.</param>
            <returns>The <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/> to use.</returns>
            <remarks>If the template index points to non-existing template, the 
            default template is returned.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.GetHeight(Resco.Controls.AdvancedComboBox.TemplateSet)">
            <summary>
            Gets the current item template height for this item from chosen template set.
            </summary>
            <param name="ts">The <see cref="T:Resco.Controls.AdvancedComboBox.TemplateSet"/> to get the template from.</param>
            <returns>The <see cref="P:Resco.Controls.AdvancedComboBox.ItemTemplate.Height"/> of the current item template.</returns>
            <remarks>If the template index points to non-existing template, the 
            <see cref="!:ItemTemplate.Default"/> template is used to get height.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.Delete">
            <summary>
            Removes the item from parent ItemCollection.
            </summary>
            <remarks>Call the <see cref="M:Resco.Controls.AdvancedComboBox.ItemCollection.Remove(System.Object)"/> method of the parent,
            row is no longer used, can be added to another ItemCollection.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.ListItem.OnItemChanged(System.Object,Resco.Controls.AdvancedComboBox.ItemEventArgsType,Resco.Controls.AdvancedComboBox.ComboBoxArgs)">
            <summary>
            Raises the ItemChanged event to redraw the parent.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ListItem.m_parent">
            <summary>
            RowCollection which contains the row.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ListItem.m_htMap">
            <summary>
            Row mapping
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ListItem.m_iTemplate">
            <summary>
            Template index.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ListItem.m_iSelectedTemplate">
            <summary>
            Selected template index.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ListItem.m_iAlternateTemplate">
            <summary>
            Alternate position template index.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ListItem.m_iTextBoxTemplate">
            <summary>
            Template index for drawing in textbox
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ListItem.m_iTextBoxFocusedTemplate">
            <summary>
            Template index for drawing in focused textbox
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ListItem.m_oData">
            <summary>
            Row data
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.ListItem.m_tag">
            <summary>
            data stored as Tag property
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.StringData">
            <summary>
            Gets or sets the item data converted to string array.
            </summary>
            <value>The item data converted to string array.</value>
            <remarks>This property is used by the visual designer.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.Item(System.Int32)">
            <summary>
            Gets or sets the data at given index.
            </summary>
            <value>The data at given index.</value>
            <remarks>The index bounds are checked and <see langword="null"/> is returned, 
            or value is not set, when the index is incorrect.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.Item(System.String)">
            <summary>
            Gets or sets the data in the named field.
            </summary>
            <value>The data in the named field.</value>
            <remarks>If the field is not found in the mapping, <see langword="null"/> is returned,  or
            value is not set.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.Template">
            <summary>
            Gets the current <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/> for this item.
            </summary>
            <value>The current <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/>.</value>
            <remarks>If the template index points to non-existing template, the 
            AdvancedComboBox default template is returned.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.Height">
            <summary>
            Gets the current item template height for this item.
            </summary>
            <value>The <see cref="P:Resco.Controls.AdvancedComboBox.ItemTemplate.Height"/> of the current item template.</value>
            <remarks>If the template index points to non-existing template, the 
            AdvancedComboBox default template is used to get height.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.Index">
            <summary>
            Gets the index of Item in ItemCollection.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.TemplateIndex">
            <summary>
            Gets or sets the template index, which is used when the item is not selected.
            </summary>
            <value>The template index, which is used when the item is not <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Selected"/>.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.CurrentTemplateIndex">
            <summary>
            Gets the current template index, which depends on whether the item is selected or not.
            </summary>
            <value><see cref="P:Resco.Controls.AdvancedComboBox.ListItem.SelectedTemplateIndex"/> when the item is <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Selected"/>,
            otherwise <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.TemplateIndex"/>.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.SelectedTemplateIndex">
            <summary>
            Gets or sets the selected template index, it is used for drawing the item when it is selected.
            </summary>
            <value>The template index, which is used when the item is <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.Selected"/>.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.AlternateTemplateIndex">
            <summary>
            Gets or sets the alternate template index, it is used for drawing the alternating item.
            </summary>
            <value>The template index, which is used when the item is at odd poisition in list.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.TextBoxTemplateIndex">
            <summary>
            Gets or sets the a template index, used when the item is drawed to textbox area
            </summary>
            <value>The template index, which is used when the item is drawed to textbox area.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.TextBoxFocusedTemplateIndex">
            <summary>
            Gets or sets the a template index, used when the item is drawed to focused textbox area
            </summary>
            <value>The template index, which is used when the item is drawed to focused textbox area.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.Selected">
            <summary>
            Gets or sets whether the item is selected.
            </summary>
            <value>true if item is selected, otherwise false.</value>
            <remarks>
            <p>Setting directly the Selected property of a ListItem does not fire ItemSelect event.</p>
            <p>When the item is selected, the <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.SelectedTemplateIndex"/> is used to display
            the item, otherwise the <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.TemplateIndex"/> is used to display item.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.Tag">
            <summary>
            Gets or sets the object that contains data about the control.
            </summary>
            <value>An object that contains data about the ListItem. The default is null reference.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.FieldCount">
            <summary>
            Gets the number of fields in item.
            </summary>
            <value>The number of fields in item.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.FieldNames">
            <summary>
            Gets or sets the mapping of field names.
            </summary>
            <value>The <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/> of field names.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.ListItem.Parent">
            <summary>
            Gets or sets the item collection in which item is contained.
            </summary>
            <value>The item collection in which item is contained.</value>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.BoundItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Data.DataRow,Resco.Controls.AdvancedComboBox.Mapping)">
            <summary>
            Creates new bound item with the defined parameters.
            </summary>
            <remarks>This constructor is usefull when binding more <see cref="P:Resco.Controls.AdvancedComboBox.BoundItem.DataRow"/>s from the same <see cref="T:System.Data.DataTable"/>. Parameter <paramref name="fieldNames"/> is then created once for a table as a <see cref="T:Resco.Controls.AdvancedComboBox.TableMapping"/>, effectively identifying multiple items.</remarks>
            <param name="templateIndex">The template index for item in deselected state.</param>
            <param name="selectedTemplateIndex">The template index for row in selected state.</param>
            <param name="row">The underlying <see cref="P:Resco.Controls.AdvancedComboBox.BoundItem.DataRow"/>.</param>
            <param name="fieldNames">The table mapping.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.BoundItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Data.DataRow)">
            <summary>
            Creates new bound item with the defined parameters.
            </summary>
            <remarks>This constructor creates new <see cref="T:Resco.Controls.AdvancedComboBox.TableMapping"/> for the item's <see cref="P:System.Data.DataRow.Table"/>.</remarks>
            <param name="templateIndex">The template index for item in deselected state.</param>
            <param name="selectedTemplateIndex">The template index for row in selected state.</param>
            <param name="row">The underlying <see cref="P:Resco.Controls.AdvancedComboBox.BoundItem.DataRow"/>.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.BoundItem.#ctor(System.Data.DataRow)">
            <summary>
            Creates new bound item.
            </summary>
            <remarks>This constructor creates new <see cref="T:Resco.Controls.AdvancedComboBox.TableMapping"/> for the item's <see cref="P:System.Data.DataRow.Table"/>. The template indices are set to 0.</remarks>
            <param name="row">The underlying <see cref="P:Resco.Controls.AdvancedComboBox.BoundItem.DataRow"/>.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.BoundItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Object,Resco.Controls.AdvancedComboBox.PropertyMapping)">
            <summary>
            Creates new bound item from any object given its <see cref="T:Resco.Controls.AdvancedComboBox.PropertyMapping"/>.
            </summary>
            <param name="templateIndex">The template index for row in deselected state.</param>
            <param name="selectedTemplateIndex">The template index for item in selected state.</param>
            <param name="data"><see cref="T:System.Object"/> to bind to.</param>
            <param name="propertyMapping"><see cref="T:Resco.Controls.AdvancedComboBox.PropertyMapping"/> created for the type or PropertyDescriptors for data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.BoundItem.SetData(System.Collections.ICollection)">
            <summary>
            Copies the data from the collection to the row.
            </summary>
            <param name="data">Collection of data, count of data must be equal to field count of item</param>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="data"/> has different
            <see cref="P:System.Array.Length"/> as the <see cref="P:Resco.Controls.AdvancedComboBox.BoundItem.FieldCount"/> of the ListItem.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when bound to other type then DataRow.</exception>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.BoundItem.SetData(System.Data.IDataRecord)">
            <summary>
            Copies the data from data reader or other data records.
            </summary>
            <param name="reader">Data reader or other implementation of <see cref="T:System.Data.IDataRecord"/>.</param>
            <remarks>Source must have the same field count as item, data mapping is ignored by loading 
            the data. It is recommended to create the mapping from the <paramref name="reader"/></remarks>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="reader"/> has different
            <see cref="P:System.Data.IDataRecord.FieldCount"/> as the ListItem.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when bound to other type then DataRow.</exception>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.BoundItem.SetData(System.Object,Resco.Controls.AdvancedComboBox.PropertyMapping)">
            <summary>
            Sets new <i>object</i> with specified mapping.
            </summary>
            <param name="data"><see cref="T:System.Object"/> to bind to.</param>
            <param name="propertyMapping"><see cref="T:Resco.Controls.AdvancedComboBox.PropertyMapping"/> created for the type.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.BoundItem.GetData(System.Object[])">
            <summary>
            Make the copy of internal data to object array.
            </summary>
            <param name="data"><see cref="T:System.Array"/> of objects, length of the array must be equal 
            to field count of the item.</param>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="data"/> has different
            <see cref="P:System.Array.Length"/> as the <see cref="P:Resco.Controls.AdvancedComboBox.BoundItem.FieldCount"/> of the ListItem.</exception>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.BoundItem.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.BoundItem.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.BoundItem.FieldCount">
            <summary>
            Gets the number of fields in item.
            </summary>
            <remarks>Returns the number of columns of the underlying <see cref="P:Resco.Controls.AdvancedComboBox.BoundItem.DataRow"/>.</remarks>
            <value>The number of fields in item.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.BoundItem.DataRow">
            <summary>
            Gets the underlying DataRow.
            </summary>
            <value>The underlying <see cref="P:Resco.Controls.AdvancedComboBox.BoundItem.DataRow"/>, or null if bound to other type.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.BoundItem.Data">
            <summary>
            Gets the underlying object we are bound to.
            </summary>
            <value>The underlying <see cref="T:System.Object"/>.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.BoundItem.Item(System.Int32)">
            <summary>
            Gets or sets the data at given index.
            </summary>
            <value>The data at given index.</value>
            <remarks>The index bounds are checked and <see langword="null"/> is returned, 
            or value is not set, when the index is incorrect.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.BoundItem.Item(System.String)">
            <summary>
            Gets or sets the data in the named field.
            </summary>
            <value>The data in the named field.</value>
            <remarks>If the field is not found, <see langword="null"/> is returned, or
            value is not set.</remarks>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.Mapping">
            <summary>
            Used as a map between column names and column indices.
            </summary>
            <remarks>The mapping is used by the <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> to determine the position
            of the field by name, not by the index. Mapping uses <see cref="T:System.Collections.Hashtable"/> as the
            underlying type for fast access to column indices. Once created, the mapping cannot be
            changed. When you load data from database, and you need some empty columns, create them 
            with the select command, e.g. <code>SELECT *, 0 as Flag FROM customers</code>.
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Mapping.#ctor">
            <summary>
            Creates empty mapping.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Mapping.#ctor(System.String[])">
            <summary>
            Creates the mapping from the array of field names.
            </summary>
            <param name="names">array of unique field names</param>
            <remarks>Use this constructor for known field names. 
            The order of names and their count cannot be changed.</remarks>
            <example>
            <code lang="VisualBasic">
            <![CDATA[ Dim names() As String = {"Id", "Name", "Value"}
            Dim map As New Mapping(names) ]]></code>
            <code lang="C#">
            <![CDATA[ Mapping map = new Mapping(new string[] {"Id", "Name", "Value"}); ]]>
            </code>
            </example>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Mapping.#ctor(System.Data.IDataRecord)">
            <summary>
            Creates the mapping from the data reader (or other IDataRecord).
            </summary>
            <param name="reader">Data reader or IDataRecord, must have unique field names</param>
            <remarks>Use this constructor when loading data from database with the 
            <see cref="T:System.Data.IDataReader"/>. The order of names and their count cannot be changed.</remarks>
            <example>
            <code lang="VisualBasic"><![CDATA[ Dim map As New Mapping(reader) ]]></code>
            <code lang="C#"><![CDATA[ Mapping map = new Mapping(reader); ]]>
            </code>
            </example>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Mapping.AddColumns(System.String[])">
            <summary>
            Add column names to mapping.
            </summary>
            <param name="names">Additional columns.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Mapping.GetOrdinal(System.String)">
            <summary>
            Gets the ordinal of the named field.
            </summary>
            <param name="name">Name of the field</param>
            <returns>Ordinal of the field</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Mapping.GetName(System.Int32)">
            <summary>
            Gets the name of the field.
            </summary>
            <param name="i">Ordinal of the field</param>
            <returns>Name of the field</returns>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Mapping.Empty">
            <summary>
            Denotes the constant empty mapping.
            </summary>
            <value>Empty mapping.</value>
            <remarks>Use this property instead of null, can distinguish between mapped and 
            unmapped items.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Mapping.FieldCount">
            <summary>
            Gets the number of fields.
            </summary>
            <value>The number of fields.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Mapping.Item(System.Int32)">
            <summary>
            Indexer, gets the name of the field.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">If the index is incorrect.</exception>
            <exception cref="T:System.NullReferenceException">If the mapping is empty mapping.</exception>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.Mapping.Names">
            <summary>
            Gets the column names.
            </summary>
            <remarks>The returned array is a copy of internal array, the names can't be changed.</remarks>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.TableMapping">
            <summary>
            Special <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/> used for the <see cref="T:Resco.Controls.AdvancedComboBox.BoundItem"/>.
            </summary>
            <remarks>TableMapping is bound to <see cref="T:System.Data.DataTable"/>, and is only wrapper for compatibility with AdvancedComboBox.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TableMapping.#ctor(System.Data.DataTable)">
            <summary>
            Creates the TableMapping wrapper for the specified <see cref="P:Resco.Controls.AdvancedComboBox.TableMapping.DataTable"/>.
            </summary>
            <param name="table">The <see cref="P:Resco.Controls.AdvancedComboBox.TableMapping.DataTable"/> to bound the mapping to.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TableMapping.GetName(System.Int32)">
            <summary>
            Returns the name of the i-th column in the underlying <see cref="P:Resco.Controls.AdvancedComboBox.TableMapping.DataTable"/>.
            </summary>
            <param name="i">The index of the column.</param>
            <returns>The name of the column or null, if the index is out of range.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TableMapping.GetOrdinal(System.String)">
            <summary>
            Returns the index of the column with given name in the underlying <see cref="P:Resco.Controls.AdvancedComboBox.TableMapping.DataTable"/>.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>The index of the column or -1, if the column is not in the table.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.TableMapping.AddColumns(System.String[])">
            <summary>
            Add the columns to underlying datatable.
            </summary>
            <remarks>The created columns are of type <see cref="T:System.String"/>. </remarks>
            <param name="names">The names of the columns to add.</param>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TableMapping.FieldCount">
            <summary>
            Returns the number of columns of the underlying <see cref="P:Resco.Controls.AdvancedComboBox.TableMapping.DataTable"/>.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TableMapping.Item(System.Int32)">
            <summary>
            Returns the name of the i-th column in the underlying <see cref="P:Resco.Controls.AdvancedComboBox.TableMapping.DataTable"/>.
            </summary>
            <param name="i">The index of the column.</param>
            <returns>The name of the column.</returns>
            <exception cref="T:System.IndexOutOfRangeException">if the index is out of range.</exception>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TableMapping.Names">
            <summary>
            Returns the array of column names.
            </summary>
            <remarks>The names can't be changed.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.TableMapping.DataTable">
            <summary>
            Gets the underlying <see cref="P:Resco.Controls.AdvancedComboBox.TableMapping.DataTable"/>.
            </summary>
            <value>The underlying <see cref="P:Resco.Controls.AdvancedComboBox.TableMapping.DataTable"/>.</value>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.Win32Native">
            <summary>
            Summary description for Imports.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Resco.Controls.AdvancedComboBox.AdvancedComboBox" -->
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.GetBrush(System.Drawing.Color)">
            <summary>
            Get the <see cref="T:System.Drawing.SolidBrush"/> of the given <see cref="T:System.Drawing.Color"/>.
            </summary>
            <remarks>The method is used as an optimalization, that caches the brush for drawing. It is not thread safe.</remarks>
            <param name="c"><see cref="T:System.Drawing.Color"/> of the <see cref="T:System.Drawing.SolidBrush"/>.</param>
            <returns>The <see cref="T:System.Drawing.SolidBrush"/> to be used for painting.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.GetPen(System.Drawing.Color)">
            <summary>
            Get the <see cref="T:System.Drawing.Pen"/> of the given <see cref="T:System.Drawing.Color"/>.
            </summary>
            <remarks>The method is used as an optimalization, that caches the pen for drawing. It is not thread safe.</remarks>
            <param name="c"><see cref="T:System.Drawing.Color"/> of the <see cref="T:System.Drawing.Pen"/>.</param>
            <returns>The <see cref="T:System.Drawing.Pen"/> to be used for painting.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.#ctor">
            <summary>
            Creates new instance of an AdvancedComboBox.
            </summary>
            <remarks/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnChange(System.Object,Resco.Controls.AdvancedComboBox.ComboBoxEventArgsType,Resco.Controls.AdvancedComboBox.ComboBoxArgs)">
            <summary>
            Responds to events from the items and templates.
            </summary>
            <param name="sender">sender of event</param>
            <param name="e">type of event</param>
            <param name="args">additinal parameters to event</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <remarks>
            AdvancedComboBox control don't loose focus when its list control is focused.
            </remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnResize(System.EventArgs)">
            <summary>
            Handles the resize of the control.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DefaultTooltipWidth">
            <summary>
            Width of the tooltip.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TooltipWidth">
            <summary>
            Width of the tooltip.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnCustomizeCell(Resco.Controls.AdvancedComboBox.CustomizeCellEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CustomizeCell"/> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnItemAdding(Resco.Controls.AdvancedComboBox.ItemAddingEventArgs)">
            <summary>
            Fires the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ItemAdding"/> event.
            </summary>
            <param name="e">Arguments for the event.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnDataLoaded(Resco.Controls.AdvancedComboBox.DataLoadedEventArgs)">
            <summary>
            Fires the <see cref="!:AdvancedList.DataLoaded"/> event.
            </summary>
            <param name="e">Arguments for the event.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ShouldSerializeScrollBar">
            <summary>
            Indicates whether the <see cref="!:HeaderRow"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_items">
            <summary>
            ListItem collection that contains AdvancedComboBox's ListItem objects. It is created when AdvancedComboBox is created
            and can only be read.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_bManualDataLoading">
            <summary>
            Says whether AdvancedComboBox should fire the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ItemAdding"/> event whenever
            it needs to display more items.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_nItemsLoaded">
            <summary>
            Holds the amount of items that were loaded so far when AdvancedList was bound to a new data source.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_autoBind">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_dataSource">
            <summary>
            Current data source that AdvancedList is bound to.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_boundMap">
            <summary>
            Column names mapping of currently bound data source.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_iSelectedCellIndex">
            <summary>
            Index of the selected cell.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_bKeyNavigation">
            <summary>
            Enable or disable internal keyboard navigation.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_iUpdateCounter">
            <summary>
            When in init, Changed event is not handled and control's backbuffer is not redrawn. 
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_bIsChange">
            <summary>
            When there is no change, backbuffer is not redrawn.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_iNoRedraw">
            <summary>
            When no redraw is set, backbuffer is not redrawn.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_doubleBuffered">
            <summary>
            Back buffer image that AdvancedComboBox paints its contents to. When the drawing is finished, back buffer
            is swapped with the graphics object inside the PaintEventArgs.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_BackColor">
            <summary>
            Back color of AdvancedComboBox
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.AdvancedComboBox.m_arrowBoxWidth">
            <summary>
            Pen that is used for drawing.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the PaintBackground event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnParentChanged(System.EventArgs)">
            <summary>
            Handles the ParentChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
            <remarks>EndUpdate is called</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.AddTooltipArea(System.Drawing.Rectangle,System.String)">
            <summary>
            Adds the rectangular tooltip area with the given text.
            </summary>
            <remarks>
            <para>Tooltip with given text is displayed in whenever user holds mouse down in the selected area for at least 500 ms.</para>
            <para>Tooltip areas are reset when they are scrolled from view. The best place to update the tooltip areas is from within custom cell's Draw method.</para>
            </remarks>
            <param name="bounds"><see cref="T:System.Drawing.Rectangle"/> within client coordinates.</param>
            <param name="text">Text to display.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CheckForLink(System.Drawing.Point)">
            <summary>
            Find out if a point is contained within AdvancedComboBox's links.
            </summary>
            <param name="p">Point that will be searched for in AdvancedComboBox's links.</param>
            <returns>True, if p is contained in AdvancedComboBox's links. False otherwise.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CheckForButton(System.Drawing.Point)">
            <summary>
            Find out if a point is contained within AdvancedComboBox's buttons.
            </summary>
            <param name="p">Point that will be searched for in AdvancedComboBox's buttons.</param>
            <returns>True, if p is contained in AdvancedComboBox's buttons. False otherwise.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Reload">
            <summary>
            Reloads the data with the DataConnector.
            </summary>
            <remarks>
            <p><c>Reload</c> method removes the items that were loaded by the last call 
            to <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadData"/> or <c>Reload</c> method and then calls 
            the <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadData"/> to refill the row collection. The new data are 
            inserted to a position of the first removed <c>ListItem</c>.</p>
            <p>If <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadData(System.Int32)"/> has not been called before, the command only executes 
            <c>LoadData()</c></p>
            <p>As an alternative, you can use the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DataSource"/> property.</p>
            <p>The template indices used for the loaded items are determined by the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TemplateIndex"/> and <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedTemplateIndex"/> properties.</p>
            </remarks>
            <returns>The <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/> of the loaded data items.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadData(System.Int32)">
            <summary>
            Loads the data with the data connector and inserts the loaded Items to specified position.
            </summary>
            <remarks><p>The loaded Items are added to the ItemCollection at specified index.</p>
            <p>The template indices used for the loaded items are determined by the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TemplateIndex"/> and <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedTemplateIndex"/> properties.</p>
            <note type="caution">Do not use this method with <paramref name="iInsertIndex"/> other then -1 when the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DelayLoad"/> property is set to true.</note>
            </remarks>
            <param name="iInsertIndex">Index to the ItemCollection indicating where the data should be inserted or <c>-1</c> when the data should be added to the end of the ItemCollection.</param>
            <returns>The <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/> of the loaded data items.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CloseConnector">
            <summary>
            Closes the data connector if it is still open.
            </summary>
            <remarks>Can be used when <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DelayLoad"/> is set to close the connector (and associated connection if applicable).</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadData">
            <summary>
            Loads the data with the data connector.
            </summary>
            <remarks><p>The loaded Items are added to the end of the ItemCollection.</p>
            <p>The template indices used for the loaded items are determined by the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TemplateIndex"/> and <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedTemplateIndex"/> properties.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadDataManually">
            <summary>
            Fills AdvancedComboBox's ItemCollection by user provided ListItem objects.
            </summary>
            <remarks>
            You have to handle the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ItemAdding"/> event, otherwise an InvalidOperationException
            will be thrown. In the handler, you must provide a <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> object that will be added into
            AdvancedComboBox's ItemCollection. 
            </remarks>
            <seealso cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ItemAdding"/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.InsertItem(Resco.Controls.AdvancedComboBox.ListItem,System.Int32)">
            <summary>
            Insert the <see cref="!:Resco.Controls.ListItem"/> at the specified index. 
            </summary>
            <param name="item">The <see cref="!:Resco.Controls.ListItem"/> to insert.</param>
            <param name="insertIndex">The index, where the <see cref="!:Resco.Controls.ListItem"/> should be inserted.</param>
            <returns>Index to insert the next ListItem.</returns>
            <remarks><para>When the <paramref name="insertIndex"/> is -1, the <paramref name="item"/> is added to the end of the ItemCollection. Otherwise the <paramref name="item"/> is inserted at the specified index.</para>
            <para>Fires the <see cref="!:Resco.Controls.AdvancedComboBox.ValidateData"/> event before the ListItem is finally inserted.</para></remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnBindingContextChanged(System.EventArgs)">
            <summary>
            Handles the changes of binding context.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnClick(System.EventArgs)">
            <summary>
            Handles the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
            <remarks>Fires the <see cref="!:ItemSelect"/>, <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LinkClick"/>, <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ButtonClick"/> and 
            <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CellClick"/> events.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnLink(Resco.Controls.AdvancedComboBox.LinkCell,Resco.Controls.AdvancedComboBox.ListItem,System.Drawing.Point,System.Int32,System.Int32)">
            <summary>
            Handles the LinkClick event.
            </summary>
            <param name="c">LinkCell that was clicked.</param>
            <param name="item">ListItem that was clicked.</param>
            <param name="index">Point containing indexes of item and cell.</param>
            <param name="yOffset">Vertical offset of the item.</param>
            <param name="width">width of client rectangle.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnButton(Resco.Controls.AdvancedComboBox.ButtonCell,Resco.Controls.AdvancedComboBox.ListItem,System.Drawing.Point,System.Int32)">
            <summary>
            Handles the ButtonClick event.
            </summary>
            <param name="c">ButtonCell that was clicked.</param>
            <param name="item">ListItem that was clicked.</param>
            <param name="index">Point containing indexes of item and cell.</param>
            <param name="yOffset">Vertical offset of the item.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnCellClick(Resco.Controls.AdvancedComboBox.CellEventArgs)">
            <summary>
            Handles the CellClick event.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnCellEntered(Resco.Controls.AdvancedComboBox.CellEnteredMainEventArgs,Resco.Controls.AdvancedComboBox.AdvancedComboBox)">
            <summary>
            Fires the CellEntered event.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the OnMouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the OnMouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the OnMouseMove event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.GetCellAtPoint(System.Drawing.Point)">
            <summary>
            Returns the cell at the specified point.
            </summary>
            <remarks>Use the client coordinates for the point. Returned Cell is null, if no cell is at the point.</remarks>
            <exception cref="T:System.ArgumentException"> is thrown when specified point is out of the client rectangle.</exception>
            <param name="pt"><see cref="T:System.Drawing.Point"/> coordinates relative to client rectangle.</param>
            <returns><see cref="T:Resco.Controls.AdvancedComboBox.CellEventArgs"/> specifying the cell at the point.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.GetItemText(System.Object)">
            <summary>
            Returns the text representation of the specified item.
            </summary>
            <remarks>
            Returns the text representation of the specified item.
            </remarks>
            <returns>
            If the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DisplayMember"/> property is not specified, the value returned by GetItemText is the value of the item's ToString method. 
            Otherwise, the method returns the string value of the member specified in the DisplayMember property for the object specified in the item parameter.
            </returns>
            <seealso cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DisplayMember"/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.NextSelectableCell">
            <summary>
            Move to the next selectable cell.
            </summary>
            <remarks>
            Changes the actual <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/> property to the next selectable cell. If currently selected cell is
            the last cell in the collection, sets SelectedCell to null which deselects all the cells.
            </remarks>
            <returns>True, if next selectable cell existed, false otherwise.</returns>
            <seealso cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/>
            <seealso cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.PreviousSelectableCell"/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.PreviousSelectableCell">
            <summary>
            Moves to previous selectable cell.
            </summary>
            <remarks>
            Changes the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/> property to the previous selectable cell. 
            If currently selected cell is the first selectable cell in the collection, sets SelectedCell 
            to null which deselects all the cells. If no cell is selected (SelectedCell returns null), 
            function selects the last selectable cell in the collection.
            </remarks>
            <returns>True, if previous selectable cell existed, false otherwise.</returns>
            <seealso cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/>
            <seealso cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.NextSelectableCell"/>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SuspendRedraw">
            <summary>
            Temporarily suspends the redraw for the control.
            </summary>
            <remarks>Control is not redrawn, but the scroll position and height is recalculated.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ResumeRedraw(System.Boolean)">
            <summary>
            Resumes normal redraw and immediately redraws control.
            </summary>
            <remarks>Redraws the backbuffer and invalidates the control</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.BeginUpdate">
            <summary>
            Signals the object that initialization is starting.
            </summary>
            <remarks>Control is not redrawn and not recalculated.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.EndUpdate">
            <summary>
            Signals the object that initialization is complete.
            </summary>
            <remarks>Control is recalculated and redrawn.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SaveXml(System.String)">
            <summary>
            Serializes all of the control properties to XML file in the given path.
            </summary>
            <remarks>The xml file contains all of the properties of AdvancedComboBox and the serialized templates. You can restore them by using <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadXml(System.String,Resco.Controls.AdvancedComboBox.AdvancedComboBox.DesignTimeCallback)"/> method. It is not recommended to modify the file.
            <note type="caution">The images from imagelist in <see cref="T:Resco.Controls.AdvancedComboBox.ImageCell"/> are serialized in jpeg format, loosing some of the quality. To prevent serializing images, set the <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageList"/> property to null before calling this method.</note>
            <note>This method is not supported on Compact Framework.</note></remarks>
            <param name="fileName">The name of the file, to which the properties are serialized.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SaveXml(System.Xml.XmlWriter)">
            <summary>
            Serializes all of the control properties to <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <remarks>The xml file contains all of the properties of AdvancedComboBox and the serialized templates. You can restore them by using <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadXml(System.String,Resco.Controls.AdvancedComboBox.AdvancedComboBox.DesignTimeCallback)"/> method. It is not recommended to modify the file.
            <note type="caution">The images from imagelist in <see cref="T:Resco.Controls.AdvancedComboBox.ImageCell"/> are serialized in jpeg format, loosing some of the quality. To prevent serializing images, set the <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageList"/> property to null before calling this method.</note>
            <note>This method is not supported on Compact Framework.</note></remarks>
            <param name="writer"><see cref="T:System.Xml.XmlWriter"/> to which the properties are serialized.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadXml(System.String,Resco.Controls.AdvancedComboBox.AdvancedComboBox.DesignTimeCallback)">
            <summary>
            Load the control from the specified <paramref name="location"/>.
            </summary>
            <remarks>You can use filename or any other valid URI as the <paramref name="location"/>.The control properties are set and new templates are loaded from the file created by the <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SaveXml(System.String)"/> method. It is not recommended to change the file manualy.</remarks>
            <param name="location">Location where the XML representation of control is stored.</param>
            <param name="dtc">Reserved for design-time support.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadXml(System.String)">
            <summary>
            Load the control from the specified <paramref name="location"/>.
            </summary>
            <remarks>You can use filename or any other valid URI as the <paramref name="location"/>.The control properties are set and new templates are loaded from the file created by the <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SaveXml(System.String)"/> method. It is not recommended to change the file manualy.</remarks>
            <param name="location">Location where the XML representation of control is stored.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadXml(System.Xml.XmlReader)">
            <summary>
            Load the control from the specified  <paramref name="reader"/>.
            </summary>
            <remarks>The control properties are set and new templates are loaded from the file created by the <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SaveXml(System.String)"/> method. It is not recommended to change the file manualy.</remarks>
            <param name="reader"><see cref="T:System.Xml.XmlReader"/> with the control parameters.</param>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LinkClick">
            <summary>
            Occurs when the link in the control is clicked.
            </summary>
            <remarks><p>Occurs when the link in the control is clicked. When the user clicks on 
            the link, LinkClick event will occur instead of other actions, like selecting the item
            or clicking the cell.</p>
            <p>LinkClick event has arguments of type <see cref="T:Resco.Controls.AdvancedComboBox.LinkEventArgs"/>.</p></remarks>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DropDown">
            <summary>
            Occurs when the list is dropped down. (popup)
            </summary>
            <remarks><p>This event is raised when the list of items is dropped down.</p>
            <p>DropDown event has arguments of type <see cref="T:System.EventArgs"/>.</p></remarks>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DroppingDown">
            <summary>
            Occurs when the list is to be dropped down. (popup)
            </summary>
            <remarks><p>When user clicks on AdvancedComboBox and list is not shown this event is raised.
            When Cancel property of DropDownEventArgs is not set to true, the list shows. 
            If you want to handle showing of list in some special 
            way (for example showing list only when specific cell was clicked), set Cancel property to true.</p>
            <p>DropDown event has arguments of type <see cref="T:Resco.Controls.AdvancedComboBox.DropDownEventArgs"/>.</p></remarks>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DropDownClosed">
            <summary>
            Occurs when the list is closed.
            </summary>
            <remarks><p>This event is raised when the list of items is closed.</p>
            <p>DropDownClosed event has arguments of type <see cref="T:System.EventArgs"/>.</p></remarks>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DropDownClosing">
            <summary>
            Occurs when the list is to be closed.
            </summary>
            <remarks><p>When user selects an item or clicks on arrow, this event is raised
            and if Cancel property of DropDownEventArgs is not set to true the list is closed.
            If you want to handle closing of list in some special way (for example showing list only when specific cell was clicked), 
            set Cancel property to true.</p>
            <p>DropDownClosed event has arguments of type <see cref="T:Resco.Controls.AdvancedComboBox.DropDownEventArgs"/>.</p></remarks>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ButtonClick">
            <summary>
            Occurs when the button in the control is clicked.
            </summary>
            <remarks><p>Occurs when the button in the control is clicked. When the user clicks 
            the button, ButtonClick event will occur instead of other actions, like selecting the item
            or clicking the cell. ButtonClick event can occur also in rows, that are not selected,
            without selecting the item.</p>
            <p>ButtonClick event has arguments of type <see cref="T:Resco.Controls.AdvancedComboBox.CellEventArgs"/>.</p></remarks>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CellClick">
            <summary>
            Occurs when the cell in the selected item of the control is clicked.
            </summary>
            <remarks><p>Occurs when the cell in the item of the control is clicked. When item is
            not selected, the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CellClick"/> event will not occur. </p>
            <p>CellClick event has arguments of type <see cref="T:Resco.Controls.AdvancedComboBox.CellEventArgs"/>.</p></remarks>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ItemEntered">
            <summary>
            Occurs when Enter key was pressed on an active item.
            </summary>
            <remarks>
            These conditions must be met for this event to occur:
            <list type="bullet">
            <item>
            <term><see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.KeyNavigation"/></term><description> must be set to true</description>
            </item>
            <item><description>Enter key must be pressed while an iten is active.</description></item>
            </list>
            </remarks>
            <seealso cref="!:AdvancedComboBox.ItemEnteredEventArgs"/>
            <seealso cref="!:AdvancedComboBox.ItemEnteredEventHandler"/>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CellEntered">
            <summary>
            Occurs if either mouse is clicked on a selectable cell or if <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.KeyNavigation"/>
            is set to true and Enter key is pressed while a cell is selected.
            <seealso cref="T:Resco.Controls.AdvancedComboBox.CellEnteredMainEventHandler"/>
            <seealso cref="T:Resco.Controls.AdvancedComboBox.CellEnteredMainEventArgs"/>
            </summary>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedIndexChanged">
            <summary>
            Occurs when the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedIndex"/> property has changed.
            </summary>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedValueChanged">
            <summary>
            Occurs when the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedValue"/> property has changed.
            </summary>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ValueMemberChanged">
            <summary>
            Occurs when the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ValueMember"/> property has changed.
            </summary>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DisplayMemberChanged">
            <summary>
            Occurs when the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DisplayMember"/> property has changed.
            </summary>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CustomizeCell">
            <summary>
            CustomizeCell event is used to allow more advanced cell customization.
            </summary>
            <remarks>
            <p>This event allows you to modify cells.
            To allow this event for the given cell, set <see cref="P:Resco.Controls.AdvancedComboBox.Cell.CustomizeCell"/> 
            to <c>true</c>.</p>
            <p>Arguments for this event are of type <see cref="T:Resco.Controls.AdvancedComboBox.CustomizeCellEventArgs"/>.</p> 
            </remarks>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ValidateData">
            <summary>
            Occurs after the item is loaded from <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DbConnector"/> 
            and before the item is added to <see cref="T:Resco.Controls.AdvancedComboBox.ItemCollection"/>.
            </summary>
            <remarks>Validate data event is usefull for custom data processing. 
            It has the arguments of type <see cref="T:Resco.Controls.AdvancedComboBox.ValidateDataArgs"/>.</remarks>
            <seealso cref="T:Resco.Controls.AdvancedComboBox.ValidateDataArgs"/>
        </member>
        <!-- Badly formed XML comment ignored for member "E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DataLoaded" -->
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Scroll">
            <summary>
            Occurs when the AdvancedComboBox's list is scrolled.
            </summary>
            <value>The event handler receives an argument of type <see cref="T:System.EventArgs"/>.</value>
            <remarks>Use this event to respond on scrolling.</remarks>
        </member>
        <member name="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ItemAdding">
            <summary>
            Occurs when a new ListItem should be provided for AdvancedComboBox's ItemCollection.
            </summary>
            <remarks>
            Once you call the <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.LoadDataManually"/> method, AdvancedComboBox fires this event
            regularly for you to provide it a <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> object filled with data. The arguments for this event
            is derived from CancelEventArgs. You have to set the Cancel property in the event handler to true to stop
            loading more data.
            If <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DelayLoad"/> is set to true, the event stops firing as soon as the items
            fill up AdvancedComboBox's client area. However, as soon as the user scrolls down to see more items, 
            the event starts firing again for the user to provide additional <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/> objects to be added
            into the ItemCollection.
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Focused">
            <summary>
            Gets a value indicating whether the control has input focus.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.KeyNavigation">
            <summary>
            Enable or disable internal keyboard navigation.
            </summary>
            <remarks>
            If KeyNavigation is enabled, user can use the arrow up and down keys to change the selected item.
            If there are any selectable cells in the currently selected item, the user can use the arrow left and
            right keys to select those cells. You can get the index of currently selected cell from
            <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell"/> property.
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.BackColor">
            <summary>
            Gets or sets the background <see cref="T:System.Drawing.Color"/> of a control.
            </summary>
            <remarks>This color is used for drawing background.</remarks>
            <value>The background <see cref="T:System.Drawing.Color"/> of a control.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ListGridLines">
            <summary>
            Gets or sets whether to display gridlines.
            </summary>
            <value>true to display gridlines, false otherwise.</value>
            <remarks>Gridlines are the separating lines between the diplayed items with height of 1 pixel.
            Color of gridlines is determined by the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ListGridColor"/> property.
            You can use the <see cref="T:Resco.Controls.AdvancedComboBox.SeparatorCell"/> instead of gridlines, or if you want 
            gridlines for some rows only.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ListGridColor">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"/> of the gridlines.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the gridlines.</value>
            <remarks>Gridlines are the separating lines between the diplayed rows with height of 1 pixel.
            Gridlines are displayed only if the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ListGridLines"/> property is set to true.
            You can use the <see cref="T:Resco.Controls.AdvancedComboBox.SeparatorCell"/> instead of gridlines, or if you want 
            gridlines for some items only.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ScrollbarWidth">
            <summary>
            Gets or sets the width of the scrollbar.
            </summary>
            <value>The width of the scrollbar.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ShowScrollbar">
            <summary>
            Gets or sets whether the scrollbar should be visible or always hidden.
            </summary>
            <value>true if the scrollbar should be visible, false otherwise</value>
            <remarks>Default value is true, the scrollbar is visible when needed.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ScrollbarVisible">
            <summary>
            Gets the scrollbar visibility.
            </summary>
            <value>true if the scrollbar is displayed, false otherwise.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Templates">
            <summary>
            Gets or sets the current template set.
            </summary>
            <value>The <see cref="T:Resco.Controls.AdvancedComboBox.TemplateSet"/> containing currently used templates.</value>
            <remarks><p><see cref="T:Resco.Controls.AdvancedComboBox.TemplateSet"/> is the collection of <see cref="T:Resco.Controls.AdvancedComboBox.ItemTemplate"/>s. 
            The <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.TemplateIndex"/> and <see cref="P:Resco.Controls.AdvancedComboBox.ListItem.SelectedTemplateIndex"/> are 
            the indices to this template set, using the default templates, 
            when incorrect index is used.</p>
            <p>You can have prepared more template sets for different occassions, and change the 
            look of the AdvancedComboBox by simply swapping the template sets without changing 
            the indices in each <see cref="T:Resco.Controls.AdvancedComboBox.ListItem"/>.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Items">
            <summary>
            Gets the <see cref="T:Resco.Controls.AdvancedComboBox.ItemCollection"/> containing displayed items.
            </summary>
            <remarks/>
            <value>The <see cref="T:Resco.Controls.AdvancedComboBox.ItemCollection"/> containing displayed items.</value>
            <seealso cref="T:Resco.Controls.AdvancedComboBox.ItemCollection"/>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedItem" -->
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedIndex">
            <summary>
            Gets or sets the index specifying the currently selected item.
            </summary>
            <remarks>
            This property indicates the zero-based index of the currently selected item in the combo box list. Setting a new index
            raises the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedIndexChanged"/> event.
            </remarks>
            <value>A zero-based index of the currently selected item. A value of negative one (-1) is returned if no item is 
            selected</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedCell">
            <summary>
            Gets or sets the cell that is selected within the currently selected item's ItemTemplate.
            </summary>
            <remarks>
            If list is closed, selected cell is set and obtained from textbox, otherwise from list.
            Setting this property to null means that no cell is selected.
            If you set this property to a cell that is not selectable or that cell does not belong to currently
            selected item's ItemTemplate's CellCollection, an ArgumentException is thrown.
            </remarks>
            <seealso cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.NextSelectableCell"/>
            <seealso cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.PreviousSelectableCell"/>
            <see cref="P:Resco.Controls.AdvancedComboBox.Cell.Selectable"/>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedValue">
            <summary>
            Gets the value of the member property specified by the ValueMember property.
            </summary>
            <remarks>
            If a property is not specified in ValueMember, SelectedValue returns the  results of the ToString method 
            of the object.
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
            <value>The text associated with this control.</value>
            <remarks>When setting the <b>Text</b> property, a null reference (<b>Nothing</b> in Visual Basic) or an empty string ("") 
            sets the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedIndex"/> to -1.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ValueMember">
            <summary>
            Gets or sets the property to use as the actual value for the items in the <see cref="T:Resco.Controls.AdvancedComboBox.AdvancedComboBox"/>
            </summary>
            <remarks>
            <p>Specify the contents of the <b>ValueMember</b> property in cases where you bind data.</p>
            <p>You can clear the <b>ValueMember</b> property by setting the property to an empty string ("") or <b>null</b> (Nothing in Visual Basic).</p>
            <p>Setting a new <b>ValueMember</b> property raises the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ValueMemberChanged"/> and 
            <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedValueChanged"/> events.</p>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DisplayMember" -->
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DataSource">
            <summary>
            Gets or sets the data source displayed by the AdvancedComboBox.
            </summary>
            <value>An object that implements the <see cref="T:System.Collections.IList"/> interface, such as a <see cref="T:System.Data.DataTable"/> or an <see cref="T:System.Array"/>. The default is a null reference (Nothing in Visual Basic).</value>
            <remarks><p>For the given DataSource one common <see cref="T:Resco.Controls.AdvancedComboBox.PropertyMapping"/> is created, that can be used to identify the items from the same source. For each item in the datasource, proper <see cref="T:Resco.Controls.AdvancedComboBox.BoundItem"/> is created and added to the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Items"/> collection. If the underlying list supports notifications, any change of the underlying datasource is reflected in the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.Items"/> collection.</p>
            <p>When the DataSource property is set, or the item is added to the underlying datasource, the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TemplateIndex"/> and <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedTemplateIndex"/> properties of AdvancedComboBox are used as template indices of inserted <see cref="T:Resco.Controls.AdvancedComboBox.BoundItem"/>. You can change them in the <see cref="E:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ValidateData"/> event handler.</p>
            </remarks>
            <note>It is not recommended to combine using the DataSource property and other ways of filling the AdvancedComboBox.</note>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.AutoBinding">
            <summary>
            Allows the automatic databinding.
            </summary>
            <remarks>Use this property, if you want to allow automatic databinding to the same datasource using <see cref="T:System.Windows.Forms.CurrencyManager"/>. <see cref="P:System.Windows.Forms.CurrencyManager.Position"/> is synchronized with the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedIndex"/>. If <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DataSource"/> is <see langword="null"/>, then you can bind to the Items property, otherwise use the DataSource property.
            <note>If DataSource is set, the control is automatically databound, and AutoBinding property is not required.</note></remarks>
            <value><c>true</c> if databinding is enabled, <c>false</c> otherwise</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.MaxListHeight" -->
        <!-- Badly formed XML comment ignored for member "P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ListHeight" -->
        <!-- Badly formed XML comment ignored for member "P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DropDownWidth" -->
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.FullScreenList">
            <summary>
            Allows drawing list on full screen.
            </summary>
            <remarks>If true, the list is not showed bellow combo box, but it is drawed to fit whole client area of form.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.AutoHideDropDownList">
            <summary>
            Allows or disables auto hiding of list when user clicks outside of its bounds.
            </summary>
            <remarks>If set to false, the list does not set its Capture property to true and is not closed when user clicks outside of the AdvancedComboBox bounds.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.RightToLeft">
            <summary>
            Gets or sets a value indicating whether control's elements are aligned to support right-to-left locales.
            </summary>
            <value><b>true</b> to support right-to-left locales, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DataConnector">
            <summary>
            Gets or sets the <see cref="T:Resco.Controls.AdvancedComboBox.IDataConnector"/> which can be used to load the data.
            </summary>
            <remarks>If <see langword="null"/> is set as a DataConnector, the property will reset
            to standard <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DbConnector"/>, otherwise the new provided conenctor is used.
            <note type="caution">The use of this property is for extensibility purpose only and is
            not fully supported yet.</note>
            </remarks>
            <seealso cref="T:Resco.Controls.AdvancedComboBox.IDataConnector"/>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DbConnector">
            <summary>
            Gets the <see cref="!:Resco.Controls.DbConnector"/> which is defaultly used to load the data.
            </summary>
            <value>The <see cref="!:Resco.Controls.DbConnector"/> which is defaultly used to load the data.</value>
            <remarks>
            <p>The default connector is used, if no other <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DataConnector"/> 
            is provided.</p>
            <p>By default, the DbConnector is used to connect to SqlServerCe database. If command text
            or connection string is set, new SqlCeCommand and SqlCeConnection, or the 
            <see cref="!:Resco.Controls.DataConnector.Command"/> property is accessed, the command is created within 
            the connector. If you want to use other type of access (e.g. Sql direct), you must create 
            the object with the <see cref="T:System.Data.IDbCommand"/> interface (SqlCommand) with the Connection set.
            </p>
            <p>DbConnector exposes property <see cref="!:Resco.Controls.DataConnector.Command"/>, which can be used to 
            manipulate with the command. It is exposed only as <see cref="T:System.Data.IDbCommand"/>, so you have
            to convert the type to used command (e.g. SqlCeCommand) or use just 
            the <see cref="T:System.Data.IDbCommand"/> properties and methods. This is suitable for e.g. setting existing
            open connection to command, or manipulating the parameters of the command (see example).
            </p>
            </remarks>
            <seealso cref="!:Resco.Controls.DbConnector"/>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TooltipType">
            <summary>
            Gets or sets how the ToolTip should be drawn in <see cref="T:Resco.Controls.AdvancedComboBox.TextCell"/>.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TooltipForeColor">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"/> of the tooltip fore color.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the tooltip fore color.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TooltipBackColor">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"/> of the tooltip back color.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> of the tooltip back color.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ArrowBoxBorder">
            <summary>
            Gets or sets whether the arrow box draws border.
            </summary>
            <remarks>Use this property to show border for arrow box.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.ArrowBoxWidth" -->
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.BackBuffer">
            <summary>
            Gets the backbuffer <see cref="T:System.Drawing.Graphics"/> to draw on.
            </summary>
            <value>The <see cref="T:System.Drawing.Graphics"/> to draw on.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DelayLoad">
            <summary>
            Gets or sets the delay load option.
            </summary>
            <value>true, if delay load is applied, false otherwise.</value>
            <remarks><p>If delay load is applied, only partial data are loaded from 
            DataConnector, and new data are added only if user scrolls the control.
            Otherwise all the data are loaded and DataConnector is closed. 
            The number of loaded data is determined by the page size.</p>
            <p>When DbConnector is open, setting the DelayLoad property to false
            will load the remaing data. To avoid it, use <see cref="M:Resco.Controls.AdvancedComboBox.AdvancedComboBox.CloseConnector"/> function.</p></remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TextBoxTemplateIndex">
            <summary>
            Gets or sets the template index used for text box;
            </summary>
            <value>TextBox Template index, default value is 0.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TextBoxFocusedTemplateIndex">
            <summary>
            Gets or sets the template index used for text box when focused;
            </summary>
            <value>TextBox Focused Template index, default value is -1 (means TextBoxTemplateIndex will be used).</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TextBoxEmptyTemplateIndex">
            <summary>
            Gets or sets the template index used for text box when <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedIndex"/> is -1.
            </summary>
            <value>TextBox Empty Template index, default value is -1 (means no template will be used).</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TextBoxEmptyFocusedTemplateIndex">
            <summary>
            Gets or sets the template index used for focused text box when <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedIndex"/> is -1.
            </summary>
            <value>TextBox Empty Template index, default value is -1 (means no template will be used).</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.TemplateIndex">
            <summary>
            Gets or sets the template index used for loaded data.
            </summary>
            <value>Template index, default value is 0.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.SelectedTemplateIndex">
            <summary>
            Gets or sets the selected template index used for loaded data.
            </summary>
            <value>Selected template index, default value is 0.</value>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.AlternateTemplateIndex">
            <summary>
            Gets or sets the alternating template index used for loaded data.
            </summary>
            <value>Alternating template index, default value is -1.</value>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.DrawLineData">
            <summary>
            Contains a data describing a line of text.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.DrawLineData.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new DrawLineData with given parameters.
            </summary>
            <param name="index">Index in the original text.</param>
            <param name="length">Length of the line</param>
            <param name="width">Width in graphics plane.</param>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.DrawLineData.Index">
            <summary>
            Index of line in original text.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.DrawLineData.Length">
            <summary>
            Length of the line in characters.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.DrawLineData.Width">
            <summary>
            Width of the line in pixels.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.DrawLineData.CutLength">
            <summary>
            Length of the text if no wrapping is applied (for last line).
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.WrapTextData">
            <summary>
            Contains a data required for AutoHeight property and for drawing wrapped texts.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.WrapTextData.#ctor(System.Int32,System.Drawing.Font,System.Int32)">
            <summary>
            Creates new WrapTextData.
            </summary>
            <param name="textLength">Length of text.</param>
            <param name="font">Font to use.</param>
            <param name="width">Maximum width to which the text should be wrapped.</param>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.WrapTextData.TextLength">
            <summary>
            Length of the text.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.WrapTextData.Font">
            <summary>
            Font to use.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.WrapTextData.Width">
            <summary>
            Maximum width that data must fit into.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.WrapTextData.Height">
            <summary>
            Height of the entire text.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.WrapTextData.LineHeight">
            <summary>
            Height of the line.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.WrapTextData.Lines">
            <summary>
            Text split to lines.
            </summary>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.Utility">
            <summary>
            Provides helper methods for wrapping text.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Utility.CacheCapacity">
            <summary>
            Capacity of the cache of wrapped texts.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Utility.CacheKeyLength">
            <summary>
            Must equal or greater then 32.
            </summary>
        </member>
        <member name="F:Resco.Controls.AdvancedComboBox.Utility.SwitchRightToLeftWordWrap">
            <summary>
            Switch RTL word wrap. Be default word wrap depends on the <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.RightToLeft"/> property. If <b>SwitchRightToLeftWordWrap</b> is
            set to to true, then the behavior is switched. It means, RTL word wrap is used for <b>RightToLeft</b> sets to <b>false</b> and 
            LTR word wrap is used for <b>RightToLeft</b> sets to <b>true</b>.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.Utility.WrapText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Boolean)">
            <summary>
            Wraps text to make it fit into given width.
            </summary>
            <remarks>Uses cache of wrapped lines to speed up the process.</remarks>
            <param name="gr">Graphics to draw on.</param>
            <param name="text">Text to split.</param>
            <param name="font">Font to use.</param>
            <param name="width">Maximum width the text must fit into.</param>
            <returns><see cref="T:Resco.Controls.AdvancedComboBox.WrapTextData"/> describing wrapped text.</returns>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.CellSource">
            <summary>
            Cell source defines where the Cell takes data from.
            </summary>
            <remarks>
            <p>The cell source type is determined by the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.SourceType"/> property.
            It is changed when setting one of the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ConstantData"/>, <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnIndex"/>,
            <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnIndex"/> or <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.DisplayMember"/> properties.</p>
            <p>When source type is <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.Constant"/>, the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/>
            displays the content of <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ConstantData"/> property instead of data from item. 
            <see cref="T:Resco.Controls.AdvancedComboBox.ImageCell"/> uses this property as a constant <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageIndex"/>.</p>
            <p>When source type is <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.ColumnIndex"/>, the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> 
            displays the content of the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnIndex"/>-th field in the data item. If it is -1, then
            the index of the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> is used.</p>
            <p>When source type is <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.ColumnName"/>, the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> 
            displays the content of the field with name from the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnName"/> property.</p>
            <p>When source type is <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.DisplayMember"/>, the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> 
            displays the content of the field with name obtained from <see cref="P:Resco.Controls.AdvancedComboBox.AdvancedComboBox.DisplayMember"/> property.</p>
            </remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellSource.#ctor">
            <summary>
            Creates empty cell source, cell is bound to column index -1
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellSource.Copy">
            <summary>
            Creates a copy of this CellSource instance.
            </summary>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellSource.ShouldSerializeConstantData">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ConstantData"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellSource.ShouldSerializeColumnIndex">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnIndex"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellSource.ShouldSerializeColumnName">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnName"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellSource.ShouldSerializeDisplayMember">
            <summary>
            Indicates whether the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.DisplayMember"/> property should be persisted. 
            </summary>
            <returns>
            <b>true</b> if the property value has changed from its default; otherwise, <b>false</b>. 
            </returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.CellSource.ToString">
            <summary>
            Converts the cell source to readable form
            </summary>
            <returns>Textual representation of cell source</returns>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CellSource.SourceType">
            <summary>
            Gets the type of cell source.
            </summary>
            <remarks>The cell source type is changed when setting one of the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ConstantData"/>, 
            <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnIndex"/> or <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnName"/> properties.</remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CellSource.ConstantData">
            <summary>
            Gets or sets constant data cell source.
            </summary>
            <remarks>
            <p>Setting this property will change the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.SourceType"/> to 
            <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.Constant"/>.</p>
            <p>When source type is <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.Constant"/>, the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/>
            displays the content of <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ConstantData"/> property instead of data from item. 
            <see cref="T:Resco.Controls.AdvancedComboBox.ImageCell"/> uses this property as a constant <see cref="P:Resco.Controls.AdvancedComboBox.ImageCell.ImageIndex"/>.
            </p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnIndex">
            <summary>
            Gets or sets column index for cell source.
            </summary>
            <remarks>
            <p>Setting this property will change the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.SourceType"/> to 
            <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.ColumnIndex"/>.</p>
            <p>When source type is <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.ColumnIndex"/>, the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> 
            displays the content of the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnIndex"/>-th field in the data item. 
            If it is -1, then the index of the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> is used.</p>
            </remarks>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnName">
            <summary>
            Gets or sets column name for cell source.
            </summary>
            <remarks>
            <p>Setting this property will change the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.SourceType"/> to 
            <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.ColumnName"/>.</p>
            <p>When source type is <see cref="F:Resco.Controls.AdvancedComboBox.CellSourceType.ColumnName"/>, the <see cref="T:Resco.Controls.AdvancedComboBox.Cell"/> 
            displays the content of the field with name from the <see cref="P:Resco.Controls.AdvancedComboBox.CellSource.ColumnName"/> property.</p>
            </remarks>
        </member>
        <member name="T:Resco.Controls.AdvancedComboBox.PropertyMapping">
            <summary>
            Special <see cref="T:Resco.Controls.AdvancedComboBox.Mapping"/> used for the <see cref="T:Resco.Controls.AdvancedComboBox.BoundItem"/> to map it to any object type.
            </summary>
            <remarks>PropertyMapping is bound to any <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/>, and is only wrapper for compatibility with AdvancedComboBox.</remarks>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.PropertyMapping.#ctor(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Creates the PropertyMapping wrapper for the specified <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/>.
            </summary>
            <param name="descriptors">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> to bound the mapping to.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.PropertyMapping.#ctor(System.Type)">
            <summary>
            Creates the PropertyMapping wrapper for the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to bound the mapping to.</param>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.PropertyMapping.GetName(System.Int32)">
            <summary>
            Returns the name of the i-th column in the underlying <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/>.
            </summary>
            <param name="i">The index of the column.</param>
            <returns>The name of the column or null, if the index is out of range.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.PropertyMapping.GetOrdinal(System.String)">
            <summary>
            Returns the index of the column with given name in the underlying <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/>.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>The index of the column or -1, if the column is not in the table.</returns>
        </member>
        <member name="M:Resco.Controls.AdvancedComboBox.PropertyMapping.AddColumns(System.String[])">
            <summary>
            It is not possible to add columns to PropertyMapping, use underlying Type to accomplish this task.
            </summary>
            <param name="names">The names of the columns to add.</param>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.PropertyMapping.FieldCount">
            <summary>
            Returns the number of columns of the underlying <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/>.
            </summary>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.PropertyMapping.Item(System.Int32)">
            <summary>
            Returns the name of the i-th column in the underlying <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/>.
            </summary>
            <param name="i">The index of the column.</param>
            <returns>The name of the column.</returns>
            <exception cref="T:System.IndexOutOfRangeException">if the index is out of range.</exception>
        </member>
        <member name="P:Resco.Controls.AdvancedComboBox.PropertyMapping.Names">
            <summary>
            Returns the array of column names.
            </summary>
            <remarks>The names can't be changed.</remarks>
        </member>
    </members>
</doc>
